// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetVerifiedAccessEndpointTargets`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`verified_access_endpoint_id(impl Into<String>)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::verified_access_endpoint_id) / [`set_verified_access_endpoint_id(Option<String>)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::set_verified_access_endpoint_id):<br>required: **true**<br><p>The ID of the network CIDR endpoint.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next page of results.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`GetVerifiedAccessEndpointTargetsOutput`](crate::operation::get_verified_access_endpoint_targets::GetVerifiedAccessEndpointTargetsOutput) with field(s):
    ///   - [`verified_access_endpoint_targets(Option<Vec::<VerifiedAccessEndpointTarget>>)`](crate::operation::get_verified_access_endpoint_targets::GetVerifiedAccessEndpointTargetsOutput::verified_access_endpoint_targets): <p>The Verified Access targets.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_verified_access_endpoint_targets::GetVerifiedAccessEndpointTargetsOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<GetVerifiedAccessEndpointTargetsError>`](crate::operation::get_verified_access_endpoint_targets::GetVerifiedAccessEndpointTargetsError)
    pub fn get_verified_access_endpoint_targets(
        &self,
    ) -> crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder {
        crate::operation::get_verified_access_endpoint_targets::builders::GetVerifiedAccessEndpointTargetsFluentBuilder::new(self.handle.clone())
    }
}
