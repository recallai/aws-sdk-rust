// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeServiceLinkVirtualInterfaces`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_link_virtual_interface_ids(impl Into<String>)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::service_link_virtual_interface_ids) / [`set_service_link_virtual_interface_ids(Option<Vec::<String>>)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::set_service_link_virtual_interface_ids):<br>required: **false**<br><p>The IDs of the service link virtual interfaces.</p><br>
    ///   - [`filters(Filter)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::set_filters):<br>required: **false**<br><p>The filters to use for narrowing down the request. The following filters are supported:</p> <ul>  <li>   <p><code>outpost-lag-id</code> - The ID of the Outpost LAG.</p></li>  <li>   <p><code>outpost-arn</code> - The Outpost ARN.</p></li>  <li>   <p><code>owner-id</code> - The ID of the Amazon Web Services account that owns the service link virtual interface.</p></li>  <li>   <p><code>state</code> - The state of the Outpost LAG.</p></li>  <li>   <p><code>vlan</code> - The ID of the address pool.</p></li>  <li>   <p><code>service-link-virtual-interface-id</code> - The ID of the service link virtual interface.</p></li>  <li>   <p><code>local-gateway-virtual-interface-id</code> - The ID of the local gateway virtual interface.</p></li> </ul><br>
    ///   - [`max_results(i32)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next page of results.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`DescribeServiceLinkVirtualInterfacesOutput`](crate::operation::describe_service_link_virtual_interfaces::DescribeServiceLinkVirtualInterfacesOutput) with field(s):
    ///   - [`service_link_virtual_interfaces(Option<Vec::<ServiceLinkVirtualInterface>>)`](crate::operation::describe_service_link_virtual_interfaces::DescribeServiceLinkVirtualInterfacesOutput::service_link_virtual_interfaces): <p>Describes the service link virtual interfaces.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_service_link_virtual_interfaces::DescribeServiceLinkVirtualInterfacesOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeServiceLinkVirtualInterfacesError>`](crate::operation::describe_service_link_virtual_interfaces::DescribeServiceLinkVirtualInterfacesError)
    pub fn describe_service_link_virtual_interfaces(
        &self,
    ) -> crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder {
        crate::operation::describe_service_link_virtual_interfaces::builders::DescribeServiceLinkVirtualInterfacesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
