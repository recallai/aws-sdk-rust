// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteVpcBlockPublicAccessExclusion`](crate::operation::delete_vpc_block_public_access_exclusion::builders::DeleteVpcBlockPublicAccessExclusionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::delete_vpc_block_public_access_exclusion::builders::DeleteVpcBlockPublicAccessExclusionFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::delete_vpc_block_public_access_exclusion::builders::DeleteVpcBlockPublicAccessExclusionFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`exclusion_id(impl Into<String>)`](crate::operation::delete_vpc_block_public_access_exclusion::builders::DeleteVpcBlockPublicAccessExclusionFluentBuilder::exclusion_id) / [`set_exclusion_id(Option<String>)`](crate::operation::delete_vpc_block_public_access_exclusion::builders::DeleteVpcBlockPublicAccessExclusionFluentBuilder::set_exclusion_id):<br>required: **true**<br><p>The ID of the exclusion.</p><br>
    /// - On success, responds with [`DeleteVpcBlockPublicAccessExclusionOutput`](crate::operation::delete_vpc_block_public_access_exclusion::DeleteVpcBlockPublicAccessExclusionOutput) with field(s):
    ///   - [`vpc_block_public_access_exclusion(Option<VpcBlockPublicAccessExclusion>)`](crate::operation::delete_vpc_block_public_access_exclusion::DeleteVpcBlockPublicAccessExclusionOutput::vpc_block_public_access_exclusion): <p>Details about an exclusion.</p>
    /// - On failure, responds with [`SdkError<DeleteVpcBlockPublicAccessExclusionError>`](crate::operation::delete_vpc_block_public_access_exclusion::DeleteVpcBlockPublicAccessExclusionError)
    pub fn delete_vpc_block_public_access_exclusion(
        &self,
    ) -> crate::operation::delete_vpc_block_public_access_exclusion::builders::DeleteVpcBlockPublicAccessExclusionFluentBuilder {
        crate::operation::delete_vpc_block_public_access_exclusion::builders::DeleteVpcBlockPublicAccessExclusionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
