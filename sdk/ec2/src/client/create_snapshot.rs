// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSnapshot`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`description(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_description):<br>required: **false**<br><p>A description for the snapshot.</p><br>
    ///   - [`outpost_arn(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::outpost_arn) / [`set_outpost_arn(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_outpost_arn):<br>required: **false**<br><note>  <p>Only supported for volumes on Outposts. If the source volume is not on an Outpost, omit this parameter.</p> </note> <ul>  <li>   <p>To create the snapshot on the same Outpost as the source volume, specify the ARN of that Outpost. The snapshot must be created on the same Outpost as the volume.</p></li>  <li>   <p>To create the snapshot in the parent Region of the Outpost, omit this parameter.</p></li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/ebs/latest/userguide/snapshots-outposts.html#create-snapshot">Create local snapshots from volumes on an Outpost</a> in the <i>Amazon EBS User Guide</i>.</p><br>
    ///   - [`volume_id(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::volume_id) / [`set_volume_id(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_volume_id):<br>required: **true**<br><p>The ID of the Amazon EBS volume.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply to the snapshot during creation.</p><br>
    ///   - [`location(SnapshotLocationEnum)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::location) / [`set_location(Option<SnapshotLocationEnum>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_location):<br>required: **false**<br><note>  <p>Only supported for volumes in Local Zones. If the source volume is not in a Local Zone, omit this parameter.</p> </note> <ul>  <li>   <p>To create a local snapshot in the same Local Zone as the source volume, specify <code>local</code>.</p></li>  <li>   <p>To create a regional snapshot in the parent Region of the Local Zone, specify <code>regional</code> or omit this parameter.</p></li> </ul> <p>Default value: <code>regional</code></p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`CreateSnapshotOutput`](crate::operation::create_snapshot::CreateSnapshotOutput) with field(s):
    ///   - [`owner_alias(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::owner_alias): <p>The Amazon Web Services owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured Amazon Web Services account alias set using the IAM console.</p>
    ///   - [`outpost_arn(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::outpost_arn): <p>The ARN of the Outpost on which the snapshot is stored. For more information, see <a href="https://docs.aws.amazon.com/ebs/latest/userguide/snapshots-outposts.html">Amazon EBS local snapshots on Outposts</a> in the <i>Amazon EBS User Guide</i>.</p>
    ///   - [`tags(Option<Vec::<Tag>>)`](crate::operation::create_snapshot::CreateSnapshotOutput::tags): <p>Any tags assigned to the snapshot.</p>
    ///   - [`storage_tier(Option<StorageTier>)`](crate::operation::create_snapshot::CreateSnapshotOutput::storage_tier): <p>The storage tier in which the snapshot is stored. <code>standard</code> indicates that the snapshot is stored in the standard snapshot storage tier and that it is ready for use. <code>archive</code> indicates that the snapshot is currently archived and that it must be restored before it can be used.</p>
    ///   - [`restore_expiry_time(Option<DateTime>)`](crate::operation::create_snapshot::CreateSnapshotOutput::restore_expiry_time): <p>Only for archived snapshots that are temporarily restored. Indicates the date and time when a temporarily restored snapshot will be automatically re-archived.</p>
    ///   - [`sse_type(Option<SseType>)`](crate::operation::create_snapshot::CreateSnapshotOutput::sse_type): <p>Reserved for future use.</p>
    ///   - [`availability_zone(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::availability_zone): <p>The Availability Zone or Local Zone of the snapshot. For example, <code>us-west-1a</code> (Availability Zone) or <code>us-west-2-lax-1a</code> (Local Zone).</p>
    ///   - [`transfer_type(Option<TransferType>)`](crate::operation::create_snapshot::CreateSnapshotOutput::transfer_type): <note>  <p>Only for snapshot copies.</p> </note> <p>Indicates whether the snapshot copy was created with a standard or time-based snapshot copy operation. Time-based snapshot copy operations complete within the completion duration specified in the request. Standard snapshot copy operations are completed on a best-effort basis.</p> <ul>  <li>   <p><code>standard</code> - The snapshot copy was created with a standard snapshot copy operation.</p></li>  <li>   <p><code>time-based</code> - The snapshot copy was created with a time-based snapshot copy operation.</p></li> </ul>
    ///   - [`completion_duration_minutes(Option<i32>)`](crate::operation::create_snapshot::CreateSnapshotOutput::completion_duration_minutes): <note>  <p>Only for snapshot copies created with time-based snapshot copy operations.</p> </note> <p>The completion duration requested for the time-based snapshot copy operation.</p>
    ///   - [`completion_time(Option<DateTime>)`](crate::operation::create_snapshot::CreateSnapshotOutput::completion_time): <p>The time stamp when the snapshot was completed.</p>
    ///   - [`full_snapshot_size_in_bytes(Option<i64>)`](crate::operation::create_snapshot::CreateSnapshotOutput::full_snapshot_size_in_bytes): <p>The full size of the snapshot, in bytes.</p><important>  <p>This is <b>not</b> the incremental size of the snapshot. This is the full snapshot size and represents the size of all the blocks that were written to the source volume at the time the snapshot was created.</p> </important>
    ///   - [`snapshot_id(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::snapshot_id): <p>The ID of the snapshot. Each snapshot receives a unique identifier when it is created.</p>
    ///   - [`volume_id(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::volume_id): <p>The ID of the volume that was used to create the snapshot. Snapshots created by a copy snapshot operation have an arbitrary volume ID that you should not use for any purpose.</p>
    ///   - [`state(Option<SnapshotState>)`](crate::operation::create_snapshot::CreateSnapshotOutput::state): <p>The snapshot state.</p>
    ///   - [`state_message(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::state_message): <p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper KMS permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by <code>DescribeSnapshots</code>.</p>
    ///   - [`start_time(Option<DateTime>)`](crate::operation::create_snapshot::CreateSnapshotOutput::start_time): <p>The time stamp when the snapshot was initiated.</p>
    ///   - [`progress(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::progress): <p>The progress of the snapshot, as a percentage.</p>
    ///   - [`owner_id(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::owner_id): <p>The ID of the Amazon Web Services account that owns the EBS snapshot.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::description): <p>The description for the snapshot.</p>
    ///   - [`volume_size(Option<i32>)`](crate::operation::create_snapshot::CreateSnapshotOutput::volume_size): <p>The size of the volume, in GiB.</p>
    ///   - [`encrypted(Option<bool>)`](crate::operation::create_snapshot::CreateSnapshotOutput::encrypted): <p>Indicates whether the snapshot is encrypted.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::kms_key_id): <p>The Amazon Resource Name (ARN) of the KMS key that was used to protect the volume encryption key for the parent volume.</p>
    ///   - [`data_encryption_key_id(Option<String>)`](crate::operation::create_snapshot::CreateSnapshotOutput::data_encryption_key_id): <p>The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by <code>DescribeSnapshots</code>.</p>
    /// - On failure, responds with [`SdkError<CreateSnapshotError>`](crate::operation::create_snapshot::CreateSnapshotError)
    pub fn create_snapshot(&self) -> crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder {
        crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::new(self.handle.clone())
    }
}
