// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`EnableAllowedImagesSettings`](crate::operation::enable_allowed_images_settings::builders::EnableAllowedImagesSettingsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`allowed_images_settings_state(AllowedImagesSettingsEnabledState)`](crate::operation::enable_allowed_images_settings::builders::EnableAllowedImagesSettingsFluentBuilder::allowed_images_settings_state) / [`set_allowed_images_settings_state(Option<AllowedImagesSettingsEnabledState>)`](crate::operation::enable_allowed_images_settings::builders::EnableAllowedImagesSettingsFluentBuilder::set_allowed_images_settings_state):<br>required: **true**<br><p>Specify <code>enabled</code> to apply the image criteria specified by the Allowed AMIs settings. Specify <code>audit-mode</code> so that you can check which AMIs will be allowed or not allowed by the image criteria.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::enable_allowed_images_settings::builders::EnableAllowedImagesSettingsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::enable_allowed_images_settings::builders::EnableAllowedImagesSettingsFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`EnableAllowedImagesSettingsOutput`](crate::operation::enable_allowed_images_settings::EnableAllowedImagesSettingsOutput) with field(s):
    ///   - [`allowed_images_settings_state(Option<AllowedImagesSettingsEnabledState>)`](crate::operation::enable_allowed_images_settings::EnableAllowedImagesSettingsOutput::allowed_images_settings_state): <p>Returns <code>enabled</code> or <code>audit-mode</code> if the request succeeds; otherwise, it returns an error.</p>
    /// - On failure, responds with [`SdkError<EnableAllowedImagesSettingsError>`](crate::operation::enable_allowed_images_settings::EnableAllowedImagesSettingsError)
    pub fn enable_allowed_images_settings(
        &self,
    ) -> crate::operation::enable_allowed_images_settings::builders::EnableAllowedImagesSettingsFluentBuilder {
        crate::operation::enable_allowed_images_settings::builders::EnableAllowedImagesSettingsFluentBuilder::new(self.handle.clone())
    }
}
