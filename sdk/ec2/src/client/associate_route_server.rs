// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateRouteServer`](crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`route_server_id(impl Into<String>)`](crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder::route_server_id) / [`set_route_server_id(Option<String>)`](crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder::set_route_server_id):<br>required: **true**<br><p>The unique identifier for the route server to be associated.</p><br>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder::set_vpc_id):<br>required: **true**<br><p>The ID of the VPC to associate with the route server.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder::set_dry_run):<br>required: **false**<br><p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`AssociateRouteServerOutput`](crate::operation::associate_route_server::AssociateRouteServerOutput) with field(s):
    ///   - [`route_server_association(Option<RouteServerAssociation>)`](crate::operation::associate_route_server::AssociateRouteServerOutput::route_server_association): <p>Information about the association between the route server and the VPC.</p>
    /// - On failure, responds with [`SdkError<AssociateRouteServerError>`](crate::operation::associate_route_server::AssociateRouteServerError)
    pub fn associate_route_server(&self) -> crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder {
        crate::operation::associate_route_server::builders::AssociateRouteServerFluentBuilder::new(self.handle.clone())
    }
}
