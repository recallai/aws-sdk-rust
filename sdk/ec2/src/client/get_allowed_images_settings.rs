// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAllowedImagesSettings`](crate::operation::get_allowed_images_settings::builders::GetAllowedImagesSettingsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::get_allowed_images_settings::builders::GetAllowedImagesSettingsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::get_allowed_images_settings::builders::GetAllowedImagesSettingsFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`GetAllowedImagesSettingsOutput`](crate::operation::get_allowed_images_settings::GetAllowedImagesSettingsOutput) with field(s):
    ///   - [`state(Option<String>)`](crate::operation::get_allowed_images_settings::GetAllowedImagesSettingsOutput::state): <p>The current state of the Allowed AMIs setting at the account level in the specified Amazon Web Services Region.</p> <p>Possible values:</p> <ul>  <li>   <p><code>disabled</code>: All AMIs are allowed.</p></li>  <li>   <p><code>audit-mode</code>: All AMIs are allowed, but the <code>ImageAllowed</code> field is set to <code>true</code> if the AMI would be allowed with the current list of criteria if allowed AMIs was enabled.</p></li>  <li>   <p><code>enabled</code>: Only AMIs matching the image criteria are discoverable and available for use.</p></li> </ul>
    ///   - [`image_criteria(Option<Vec::<ImageCriterion>>)`](crate::operation::get_allowed_images_settings::GetAllowedImagesSettingsOutput::image_criteria): <p>The list of criteria for images that are discoverable and usable in the account in the specified Amazon Web Services Region.</p>
    ///   - [`managed_by(Option<ManagedBy>)`](crate::operation::get_allowed_images_settings::GetAllowedImagesSettingsOutput::managed_by): <p>The entity that manages the Allowed AMIs settings. Possible values include:</p> <ul>  <li>   <p><code>account</code> - The Allowed AMIs settings is managed by the account.</p></li>  <li>   <p><code>declarative-policy</code> - The Allowed AMIs settings is managed by a declarative policy and can't be modified by the account.</p></li> </ul>
    /// - On failure, responds with [`SdkError<GetAllowedImagesSettingsError>`](crate::operation::get_allowed_images_settings::GetAllowedImagesSettingsError)
    pub fn get_allowed_images_settings(&self) -> crate::operation::get_allowed_images_settings::builders::GetAllowedImagesSettingsFluentBuilder {
        crate::operation::get_allowed_images_settings::builders::GetAllowedImagesSettingsFluentBuilder::new(self.handle.clone())
    }
}
