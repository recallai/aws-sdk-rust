// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateInstanceConnectEndpoint`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`subnet_id(impl Into<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::subnet_id) / [`set_subnet_id(Option<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_subnet_id):<br>required: **true**<br><p>The ID of the subnet in which to create the EC2 Instance Connect Endpoint.</p><br>
    ///   - [`security_group_ids(impl Into<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_security_group_ids):<br>required: **false**<br><p>One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for your VPC will be associated with the endpoint.</p><br>
    ///   - [`preserve_client_ip(bool)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::preserve_client_ip) / [`set_preserve_client_ip(Option<bool>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_preserve_client_ip):<br>required: **false**<br><p>Indicates whether the client IP address is preserved as the source. The following are the possible values.</p> <ul>  <li>   <p><code>true</code> - Use the client IP address as the source.</p></li>  <li>   <p><code>false</code> - Use the network interface IP address as the source.</p></li> </ul><note>  <p><code>PreserveClientIp</code> is only supported on IPv4 EC2 Instance Connect Endpoints. To use <code>PreserveClientIp</code>, the value for <code>IpAddressType</code> must be <code>ipv4</code>.</p> </note> <p>Default: <code>false</code></p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply to the EC2 Instance Connect Endpoint during creation.</p><br>
    ///   - [`ip_address_type(IpAddressType)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_ip_address_type):<br>required: **false**<br><p>The IP address type of the endpoint.</p> <p>If no value is specified, the default value is determined by the IP address type of the subnet:</p> <ul>  <li>   <p><code>dualstack</code> - If the subnet has both IPv4 and IPv6 CIDRs</p></li>  <li>   <p><code>ipv4</code> - If the subnet has only IPv4 CIDRs</p></li>  <li>   <p><code>ipv6</code> - If the subnet has only IPv6 CIDRs</p></li> </ul><note>  <p><code>PreserveClientIp</code> is only supported on IPv4 EC2 Instance Connect Endpoints. To use <code>PreserveClientIp</code>, the value for <code>IpAddressType</code> must be <code>ipv4</code>.</p> </note><br>
    /// - On success, responds with [`CreateInstanceConnectEndpointOutput`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointOutput) with field(s):
    ///   - [`instance_connect_endpoint(Option<Ec2InstanceConnectEndpoint>)`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointOutput::instance_connect_endpoint): <p>Information about the EC2 Instance Connect Endpoint.</p>
    ///   - [`client_token(Option<String>)`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointOutput::client_token): <p>Unique, case-sensitive idempotency token provided by the client in the the request.</p>
    /// - On failure, responds with [`SdkError<CreateInstanceConnectEndpointError>`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointError)
    pub fn create_instance_connect_endpoint(
        &self,
    ) -> crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder {
        crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::new(self.handle.clone())
    }
}
