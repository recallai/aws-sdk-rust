// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRouteServerEndpoint`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`route_server_id(impl Into<String>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::route_server_id) / [`set_route_server_id(Option<String>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::set_route_server_id):<br>required: **true**<br><p>The ID of the route server for which to create an endpoint.</p><br>
    ///   - [`subnet_id(impl Into<String>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::subnet_id) / [`set_subnet_id(Option<String>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::set_subnet_id):<br>required: **true**<br><p>The ID of the subnet in which to create the route server endpoint.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier to ensure idempotency of the request.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::set_dry_run):<br>required: **false**<br><p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply to the route server endpoint during creation.</p><br>
    /// - On success, responds with [`CreateRouteServerEndpointOutput`](crate::operation::create_route_server_endpoint::CreateRouteServerEndpointOutput) with field(s):
    ///   - [`route_server_endpoint(Option<RouteServerEndpoint>)`](crate::operation::create_route_server_endpoint::CreateRouteServerEndpointOutput::route_server_endpoint): <p>Information about the created route server endpoint.</p>
    /// - On failure, responds with [`SdkError<CreateRouteServerEndpointError>`](crate::operation::create_route_server_endpoint::CreateRouteServerEndpointError)
    pub fn create_route_server_endpoint(&self) -> crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder {
        crate::operation::create_route_server_endpoint::builders::CreateRouteServerEndpointFluentBuilder::new(self.handle.clone())
    }
}
