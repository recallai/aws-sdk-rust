// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRouteServerPeer`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`route_server_endpoint_id(impl Into<String>)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::route_server_endpoint_id) / [`set_route_server_endpoint_id(Option<String>)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::set_route_server_endpoint_id):<br>required: **true**<br><p>The ID of the route server endpoint for which to create a peer.</p><br>
    ///   - [`peer_address(impl Into<String>)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::peer_address) / [`set_peer_address(Option<String>)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::set_peer_address):<br>required: **true**<br><p>The IPv4 address of the peer device.</p><br>
    ///   - [`bgp_options(RouteServerBgpOptionsRequest)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::bgp_options) / [`set_bgp_options(Option<RouteServerBgpOptionsRequest>)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::set_bgp_options):<br>required: **true**<br><p>The BGP options for the peer, including ASN (Autonomous System Number) and BFD (Bidrectional Forwarding Detection) settings.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::set_dry_run):<br>required: **false**<br><p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply to the route server peer during creation.</p><br>
    /// - On success, responds with [`CreateRouteServerPeerOutput`](crate::operation::create_route_server_peer::CreateRouteServerPeerOutput) with field(s):
    ///   - [`route_server_peer(Option<RouteServerPeer>)`](crate::operation::create_route_server_peer::CreateRouteServerPeerOutput::route_server_peer): <p>Information about the created route server peer.</p>
    /// - On failure, responds with [`SdkError<CreateRouteServerPeerError>`](crate::operation::create_route_server_peer::CreateRouteServerPeerError)
    pub fn create_route_server_peer(&self) -> crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder {
        crate::operation::create_route_server_peer::builders::CreateRouteServerPeerFluentBuilder::new(self.handle.clone())
    }
}
