// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyVpcBlockPublicAccessExclusion`](crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`exclusion_id(impl Into<String>)`](crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder::exclusion_id) / [`set_exclusion_id(Option<String>)`](crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder::set_exclusion_id):<br>required: **true**<br><p>The ID of an exclusion.</p><br>
    ///   - [`internet_gateway_exclusion_mode(InternetGatewayExclusionMode)`](crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder::internet_gateway_exclusion_mode) / [`set_internet_gateway_exclusion_mode(Option<InternetGatewayExclusionMode>)`](crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder::set_internet_gateway_exclusion_mode):<br>required: **true**<br><p>The exclusion mode for internet gateway traffic.</p> <ul>  <li>   <p><code>allow-bidirectional</code>: Allow all internet traffic to and from the excluded VPCs and subnets.</p></li>  <li>   <p><code>allow-egress</code>: Allow outbound internet traffic from the excluded VPCs and subnets. Block inbound internet traffic to the excluded VPCs and subnets. Only applies when VPC Block Public Access is set to Bidirectional.</p></li> </ul><br>
    /// - On success, responds with [`ModifyVpcBlockPublicAccessExclusionOutput`](crate::operation::modify_vpc_block_public_access_exclusion::ModifyVpcBlockPublicAccessExclusionOutput) with field(s):
    ///   - [`vpc_block_public_access_exclusion(Option<VpcBlockPublicAccessExclusion>)`](crate::operation::modify_vpc_block_public_access_exclusion::ModifyVpcBlockPublicAccessExclusionOutput::vpc_block_public_access_exclusion): <p>Details related to the exclusion.</p>
    /// - On failure, responds with [`SdkError<ModifyVpcBlockPublicAccessExclusionError>`](crate::operation::modify_vpc_block_public_access_exclusion::ModifyVpcBlockPublicAccessExclusionError)
    pub fn modify_vpc_block_public_access_exclusion(
        &self,
    ) -> crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder {
        crate::operation::modify_vpc_block_public_access_exclusion::builders::ModifyVpcBlockPublicAccessExclusionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
