// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisableRouteServerPropagation`](crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`route_server_id(impl Into<String>)`](crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder::route_server_id) / [`set_route_server_id(Option<String>)`](crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder::set_route_server_id):<br>required: **true**<br><p>The ID of the route server for which to disable propagation.</p><br>
    ///   - [`route_table_id(impl Into<String>)`](crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder::route_table_id) / [`set_route_table_id(Option<String>)`](crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder::set_route_table_id):<br>required: **true**<br><p>The ID of the route table for which to disable route server propagation.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder::set_dry_run):<br>required: **false**<br><p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`DisableRouteServerPropagationOutput`](crate::operation::disable_route_server_propagation::DisableRouteServerPropagationOutput) with field(s):
    ///   - [`route_server_propagation(Option<RouteServerPropagation>)`](crate::operation::disable_route_server_propagation::DisableRouteServerPropagationOutput::route_server_propagation): <p>Information about the disabled route server propagation.</p>
    /// - On failure, responds with [`SdkError<DisableRouteServerPropagationError>`](crate::operation::disable_route_server_propagation::DisableRouteServerPropagationError)
    pub fn disable_route_server_propagation(
        &self,
    ) -> crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder {
        crate::operation::disable_route_server_propagation::builders::DisableRouteServerPropagationFluentBuilder::new(self.handle.clone())
    }
}
