// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeRouteServerPeers`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`route_server_peer_ids(impl Into<String>)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::route_server_peer_ids) / [`set_route_server_peer_ids(Option<Vec::<String>>)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::set_route_server_peer_ids):<br>required: **false**<br><p>The IDs of the route server peers to describe.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return with a single call.</p><br>
    ///   - [`filters(Filter)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::set_filters):<br>required: **false**<br><p>One or more filters to apply to the describe request.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::set_dry_run):<br>required: **false**<br><p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`DescribeRouteServerPeersOutput`](crate::operation::describe_route_server_peers::DescribeRouteServerPeersOutput) with field(s):
    ///   - [`route_server_peers(Option<Vec::<RouteServerPeer>>)`](crate::operation::describe_route_server_peers::DescribeRouteServerPeersOutput::route_server_peers): <p>Information about the described route server peers.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_route_server_peers::DescribeRouteServerPeersOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeRouteServerPeersError>`](crate::operation::describe_route_server_peers::DescribeRouteServerPeersError)
    pub fn describe_route_server_peers(&self) -> crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder {
        crate::operation::describe_route_server_peers::builders::DescribeRouteServerPeersFluentBuilder::new(self.handle.clone())
    }
}
