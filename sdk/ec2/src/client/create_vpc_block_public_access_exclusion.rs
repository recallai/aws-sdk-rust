// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVpcBlockPublicAccessExclusion`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`subnet_id(impl Into<String>)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::subnet_id) / [`set_subnet_id(Option<String>)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::set_subnet_id):<br>required: **false**<br><p>A subnet ID.</p><br>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::set_vpc_id):<br>required: **false**<br><p>A VPC ID.</p><br>
    ///   - [`internet_gateway_exclusion_mode(InternetGatewayExclusionMode)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::internet_gateway_exclusion_mode) / [`set_internet_gateway_exclusion_mode(Option<InternetGatewayExclusionMode>)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::set_internet_gateway_exclusion_mode):<br>required: **true**<br><p>The exclusion mode for internet gateway traffic.</p> <ul>  <li>   <p><code>allow-bidirectional</code>: Allow all internet traffic to and from the excluded VPCs and subnets.</p></li>  <li>   <p><code>allow-egress</code>: Allow outbound internet traffic from the excluded VPCs and subnets. Block inbound internet traffic to the excluded VPCs and subnets. Only applies when VPC Block Public Access is set to Bidirectional.</p></li> </ul><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::set_tag_specifications):<br>required: **false**<br><p><code>tag</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p><br>
    /// - On success, responds with [`CreateVpcBlockPublicAccessExclusionOutput`](crate::operation::create_vpc_block_public_access_exclusion::CreateVpcBlockPublicAccessExclusionOutput) with field(s):
    ///   - [`vpc_block_public_access_exclusion(Option<VpcBlockPublicAccessExclusion>)`](crate::operation::create_vpc_block_public_access_exclusion::CreateVpcBlockPublicAccessExclusionOutput::vpc_block_public_access_exclusion): <p>Details about an exclusion.</p>
    /// - On failure, responds with [`SdkError<CreateVpcBlockPublicAccessExclusionError>`](crate::operation::create_vpc_block_public_access_exclusion::CreateVpcBlockPublicAccessExclusionError)
    pub fn create_vpc_block_public_access_exclusion(
        &self,
    ) -> crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder {
        crate::operation::create_vpc_block_public_access_exclusion::builders::CreateVpcBlockPublicAccessExclusionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
