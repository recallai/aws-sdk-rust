// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`EnableRouteServerPropagation`](crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`route_server_id(impl Into<String>)`](crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder::route_server_id) / [`set_route_server_id(Option<String>)`](crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder::set_route_server_id):<br>required: **true**<br><p>The ID of the route server for which to enable propagation.</p><br>
    ///   - [`route_table_id(impl Into<String>)`](crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder::route_table_id) / [`set_route_table_id(Option<String>)`](crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder::set_route_table_id):<br>required: **true**<br><p>The ID of the route table to which route server will propagate routes.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder::set_dry_run):<br>required: **false**<br><p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`EnableRouteServerPropagationOutput`](crate::operation::enable_route_server_propagation::EnableRouteServerPropagationOutput) with field(s):
    ///   - [`route_server_propagation(Option<RouteServerPropagation>)`](crate::operation::enable_route_server_propagation::EnableRouteServerPropagationOutput::route_server_propagation): <p>Information about the enabled route server propagation.</p>
    /// - On failure, responds with [`SdkError<EnableRouteServerPropagationError>`](crate::operation::enable_route_server_propagation::EnableRouteServerPropagationError)
    pub fn enable_route_server_propagation(
        &self,
    ) -> crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder {
        crate::operation::enable_route_server_propagation::builders::EnableRouteServerPropagationFluentBuilder::new(self.handle.clone())
    }
}
