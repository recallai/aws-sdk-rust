// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDeclarativePoliciesReport`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`s3_bucket(impl Into<String>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::s3_bucket) / [`set_s3_bucket(Option<String>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::set_s3_bucket):<br>required: **true**<br><p>The name of the S3 bucket where the report will be saved. The bucket must be in the same Region where the report generation request is made.</p><br>
    ///   - [`s3_prefix(impl Into<String>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::s3_prefix) / [`set_s3_prefix(Option<String>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::set_s3_prefix):<br>required: **false**<br><p>The prefix for your S3 object.</p><br>
    ///   - [`target_id(impl Into<String>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::target_id) / [`set_target_id(Option<String>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::set_target_id):<br>required: **true**<br><p>The root ID, organizational unit ID, or account ID.</p> <p>Format:</p> <ul>  <li>   <p>For root: <code>r-ab12</code></p></li>  <li>   <p>For OU: <code>ou-ab12-cdef1234</code></p></li>  <li>   <p>For account: <code>123456789012</code></p></li> </ul><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply.</p><br>
    /// - On success, responds with [`StartDeclarativePoliciesReportOutput`](crate::operation::start_declarative_policies_report::StartDeclarativePoliciesReportOutput) with field(s):
    ///   - [`report_id(Option<String>)`](crate::operation::start_declarative_policies_report::StartDeclarativePoliciesReportOutput::report_id): <p>The ID of the report.</p>
    /// - On failure, responds with [`SdkError<StartDeclarativePoliciesReportError>`](crate::operation::start_declarative_policies_report::StartDeclarativePoliciesReportError)
    pub fn start_declarative_policies_report(
        &self,
    ) -> crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder {
        crate::operation::start_declarative_policies_report::builders::StartDeclarativePoliciesReportFluentBuilder::new(self.handle.clone())
    }
}
