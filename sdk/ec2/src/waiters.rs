// // Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

// /// Supporting types for the `bundle_task_complete` waiter.
// pub mod bundle_task_complete;

// /// Supporting types for the `conversion_task_cancelled` waiter.
// pub mod conversion_task_cancelled;

// /// Supporting types for the `conversion_task_completed` waiter.
// pub mod conversion_task_completed;

// /// Supporting types for the `conversion_task_deleted` waiter.
// pub mod conversion_task_deleted;

// /// Supporting types for the `customer_gateway_available` waiter.
// pub mod customer_gateway_available;

// /// Supporting types for the `export_task_cancelled` waiter.
// pub mod export_task_cancelled;

// /// Supporting types for the `export_task_completed` waiter.
// pub mod export_task_completed;

// /// Supporting types for the `image_available` waiter.
// pub mod image_available;

// /// Supporting types for the `image_exists` waiter.
// pub mod image_exists;

// /// Supporting types for the `image_usage_report_available` waiter.
// pub mod image_usage_report_available;

// /// Supporting types for the `instance_exists` waiter.
// pub mod instance_exists;

// /// Supporting types for the `instance_running` waiter.
// pub mod instance_running;

// /// Supporting types for the `instance_status_ok` waiter.
// pub mod instance_status_ok;

// /// Supporting types for the `instance_stopped` waiter.
// pub mod instance_stopped;

// /// Supporting types for the `instance_terminated` waiter.
// pub mod instance_terminated;

// /// Supporting types for the `internet_gateway_exists` waiter.
// pub mod internet_gateway_exists;

// /// Supporting types for the `key_pair_exists` waiter.
// pub mod key_pair_exists;

// /// Supporting types for the `nat_gateway_available` waiter.
// pub mod nat_gateway_available;

// /// Supporting types for the `nat_gateway_deleted` waiter.
// pub mod nat_gateway_deleted;

// /// Supporting types for the `network_interface_available` waiter.
// pub mod network_interface_available;

// /// Supporting types for the `password_data_available` waiter.
// pub mod password_data_available;

// /// Supporting types for the `security_group_exists` waiter.
// pub mod security_group_exists;

// /// Supporting types for the `security_group_vpc_association_associated` waiter.
// pub mod security_group_vpc_association_associated;

// /// Supporting types for the `security_group_vpc_association_disassociated` waiter.
// pub mod security_group_vpc_association_disassociated;

// /// Supporting types for the `snapshot_completed` waiter.
// pub mod snapshot_completed;

// /// Supporting types for the `snapshot_imported` waiter.
// pub mod snapshot_imported;

// /// Supporting types for the `spot_instance_request_fulfilled` waiter.
// pub mod spot_instance_request_fulfilled;

// /// Supporting types for the `store_image_task_complete` waiter.
// pub mod store_image_task_complete;

// /// Supporting types for the `subnet_available` waiter.
// pub mod subnet_available;

// /// Supporting types for the `system_status_ok` waiter.
// pub mod system_status_ok;

// /// Supporting types for the `volume_available` waiter.
// pub mod volume_available;

// /// Supporting types for the `volume_deleted` waiter.
// pub mod volume_deleted;

// /// Supporting types for the `volume_in_use` waiter.
// pub mod volume_in_use;

// /// Supporting types for the `vpc_available` waiter.
// pub mod vpc_available;

// /// Supporting types for the `vpc_exists` waiter.
// pub mod vpc_exists;

// /// Supporting types for the `vpc_peering_connection_deleted` waiter.
// pub mod vpc_peering_connection_deleted;

// /// Supporting types for the `vpc_peering_connection_exists` waiter.
// pub mod vpc_peering_connection_exists;

// /// Supporting types for the `vpn_connection_available` waiter.
// pub mod vpn_connection_available;

// /// Supporting types for the `vpn_connection_deleted` waiter.
// pub mod vpn_connection_deleted;

// #[allow(clippy::needless_lifetimes)]
// #[allow(clippy::let_and_return)]
// pub(crate) mod matchers;
