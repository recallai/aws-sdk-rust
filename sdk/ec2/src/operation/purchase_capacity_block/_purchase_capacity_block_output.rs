// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PurchaseCapacityBlockOutput {
    /// <p>The Capacity Reservation.</p>
    pub capacity_reservation: ::std::option::Option<crate::types::CapacityReservation>,
    /// <p>The Capacity Block.</p>
    pub capacity_blocks: ::std::option::Option<::std::vec::Vec<crate::types::CapacityBlock>>,
    _request_id: Option<String>,
}
impl PurchaseCapacityBlockOutput {
    /// <p>The Capacity Reservation.</p>
    pub fn capacity_reservation(&self) -> ::std::option::Option<&crate::types::CapacityReservation> {
        self.capacity_reservation.as_ref()
    }
    /// <p>The Capacity Block.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.capacity_blocks.is_none()`.
    pub fn capacity_blocks(&self) -> &[crate::types::CapacityBlock] {
        self.capacity_blocks.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for PurchaseCapacityBlockOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PurchaseCapacityBlockOutput {
    /// Creates a new builder-style object to manufacture [`PurchaseCapacityBlockOutput`](crate::operation::purchase_capacity_block::PurchaseCapacityBlockOutput).
    pub fn builder() -> crate::operation::purchase_capacity_block::builders::PurchaseCapacityBlockOutputBuilder {
        crate::operation::purchase_capacity_block::builders::PurchaseCapacityBlockOutputBuilder::default()
    }
}

/// A builder for [`PurchaseCapacityBlockOutput`](crate::operation::purchase_capacity_block::PurchaseCapacityBlockOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PurchaseCapacityBlockOutputBuilder {
    pub(crate) capacity_reservation: ::std::option::Option<crate::types::CapacityReservation>,
    pub(crate) capacity_blocks: ::std::option::Option<::std::vec::Vec<crate::types::CapacityBlock>>,
    _request_id: Option<String>,
}
impl PurchaseCapacityBlockOutputBuilder {
    /// <p>The Capacity Reservation.</p>
    pub fn capacity_reservation(mut self, input: crate::types::CapacityReservation) -> Self {
        self.capacity_reservation = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Capacity Reservation.</p>
    pub fn set_capacity_reservation(mut self, input: ::std::option::Option<crate::types::CapacityReservation>) -> Self {
        self.capacity_reservation = input;
        self
    }
    /// <p>The Capacity Reservation.</p>
    pub fn get_capacity_reservation(&self) -> &::std::option::Option<crate::types::CapacityReservation> {
        &self.capacity_reservation
    }
    /// Appends an item to `capacity_blocks`.
    ///
    /// To override the contents of this collection use [`set_capacity_blocks`](Self::set_capacity_blocks).
    ///
    /// <p>The Capacity Block.</p>
    pub fn capacity_blocks(mut self, input: crate::types::CapacityBlock) -> Self {
        let mut v = self.capacity_blocks.unwrap_or_default();
        v.push(input);
        self.capacity_blocks = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Capacity Block.</p>
    pub fn set_capacity_blocks(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::CapacityBlock>>) -> Self {
        self.capacity_blocks = input;
        self
    }
    /// <p>The Capacity Block.</p>
    pub fn get_capacity_blocks(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CapacityBlock>> {
        &self.capacity_blocks
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PurchaseCapacityBlockOutput`](crate::operation::purchase_capacity_block::PurchaseCapacityBlockOutput).
    pub fn build(self) -> crate::operation::purchase_capacity_block::PurchaseCapacityBlockOutput {
        crate::operation::purchase_capacity_block::PurchaseCapacityBlockOutput {
            capacity_reservation: self.capacity_reservation,
            capacity_blocks: self.capacity_blocks,
            _request_id: self._request_id,
        }
    }
}
