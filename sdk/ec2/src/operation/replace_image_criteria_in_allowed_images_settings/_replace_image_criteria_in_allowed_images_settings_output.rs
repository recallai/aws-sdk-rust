// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReplaceImageCriteriaInAllowedImagesSettingsOutput {
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    pub return_value: ::std::option::Option<bool>,
    _request_id: Option<String>,
}
impl ReplaceImageCriteriaInAllowedImagesSettingsOutput {
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    pub fn return_value(&self) -> ::std::option::Option<bool> {
        self.return_value
    }
}
impl ::aws_types::request_id::RequestId for ReplaceImageCriteriaInAllowedImagesSettingsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ReplaceImageCriteriaInAllowedImagesSettingsOutput {
    /// Creates a new builder-style object to manufacture [`ReplaceImageCriteriaInAllowedImagesSettingsOutput`](crate::operation::replace_image_criteria_in_allowed_images_settings::ReplaceImageCriteriaInAllowedImagesSettingsOutput).
    pub fn builder(
    ) -> crate::operation::replace_image_criteria_in_allowed_images_settings::builders::ReplaceImageCriteriaInAllowedImagesSettingsOutputBuilder {
        crate::operation::replace_image_criteria_in_allowed_images_settings::builders::ReplaceImageCriteriaInAllowedImagesSettingsOutputBuilder::default()
    }
}

/// A builder for [`ReplaceImageCriteriaInAllowedImagesSettingsOutput`](crate::operation::replace_image_criteria_in_allowed_images_settings::ReplaceImageCriteriaInAllowedImagesSettingsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ReplaceImageCriteriaInAllowedImagesSettingsOutputBuilder {
    pub(crate) return_value: ::std::option::Option<bool>,
    _request_id: Option<String>,
}
impl ReplaceImageCriteriaInAllowedImagesSettingsOutputBuilder {
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    pub fn return_value(mut self, input: bool) -> Self {
        self.return_value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    pub fn set_return_value(mut self, input: ::std::option::Option<bool>) -> Self {
        self.return_value = input;
        self
    }
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    pub fn get_return_value(&self) -> &::std::option::Option<bool> {
        &self.return_value
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ReplaceImageCriteriaInAllowedImagesSettingsOutput`](crate::operation::replace_image_criteria_in_allowed_images_settings::ReplaceImageCriteriaInAllowedImagesSettingsOutput).
    pub fn build(self) -> crate::operation::replace_image_criteria_in_allowed_images_settings::ReplaceImageCriteriaInAllowedImagesSettingsOutput {
        crate::operation::replace_image_criteria_in_allowed_images_settings::ReplaceImageCriteriaInAllowedImagesSettingsOutput {
            return_value: self.return_value,
            _request_id: self._request_id,
        }
    }
}
