// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetInstanceMetadataDefaultsInput {
    /// <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
}
impl GetInstanceMetadataDefaultsInput {
    /// <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
}
impl GetInstanceMetadataDefaultsInput {
    /// Creates a new builder-style object to manufacture [`GetInstanceMetadataDefaultsInput`](crate::operation::get_instance_metadata_defaults::GetInstanceMetadataDefaultsInput).
    pub fn builder() -> crate::operation::get_instance_metadata_defaults::builders::GetInstanceMetadataDefaultsInputBuilder {
        crate::operation::get_instance_metadata_defaults::builders::GetInstanceMetadataDefaultsInputBuilder::default()
    }
}

/// A builder for [`GetInstanceMetadataDefaultsInput`](crate::operation::get_instance_metadata_defaults::GetInstanceMetadataDefaultsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetInstanceMetadataDefaultsInputBuilder {
    pub(crate) dry_run: ::std::option::Option<bool>,
}
impl GetInstanceMetadataDefaultsInputBuilder {
    /// <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// Consumes the builder and constructs a [`GetInstanceMetadataDefaultsInput`](crate::operation::get_instance_metadata_defaults::GetInstanceMetadataDefaultsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_instance_metadata_defaults::GetInstanceMetadataDefaultsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_instance_metadata_defaults::GetInstanceMetadataDefaultsInput { dry_run: self.dry_run })
    }
}
