// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteIpamExternalResourceVerificationTokenInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
    /// <p>The token ID.</p>
    pub ipam_external_resource_verification_token_id: ::std::option::Option<::std::string::String>,
}
impl DeleteIpamExternalResourceVerificationTokenInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
    /// <p>The token ID.</p>
    pub fn ipam_external_resource_verification_token_id(&self) -> ::std::option::Option<&str> {
        self.ipam_external_resource_verification_token_id.as_deref()
    }
}
impl DeleteIpamExternalResourceVerificationTokenInput {
    /// Creates a new builder-style object to manufacture [`DeleteIpamExternalResourceVerificationTokenInput`](crate::operation::delete_ipam_external_resource_verification_token::DeleteIpamExternalResourceVerificationTokenInput).
    pub fn builder(
    ) -> crate::operation::delete_ipam_external_resource_verification_token::builders::DeleteIpamExternalResourceVerificationTokenInputBuilder {
        crate::operation::delete_ipam_external_resource_verification_token::builders::DeleteIpamExternalResourceVerificationTokenInputBuilder::default(
        )
    }
}

/// A builder for [`DeleteIpamExternalResourceVerificationTokenInput`](crate::operation::delete_ipam_external_resource_verification_token::DeleteIpamExternalResourceVerificationTokenInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteIpamExternalResourceVerificationTokenInputBuilder {
    pub(crate) dry_run: ::std::option::Option<bool>,
    pub(crate) ipam_external_resource_verification_token_id: ::std::option::Option<::std::string::String>,
}
impl DeleteIpamExternalResourceVerificationTokenInputBuilder {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// <p>The token ID.</p>
    /// This field is required.
    pub fn ipam_external_resource_verification_token_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_external_resource_verification_token_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token ID.</p>
    pub fn set_ipam_external_resource_verification_token_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_external_resource_verification_token_id = input;
        self
    }
    /// <p>The token ID.</p>
    pub fn get_ipam_external_resource_verification_token_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_external_resource_verification_token_id
    }
    /// Consumes the builder and constructs a [`DeleteIpamExternalResourceVerificationTokenInput`](crate::operation::delete_ipam_external_resource_verification_token::DeleteIpamExternalResourceVerificationTokenInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_ipam_external_resource_verification_token::DeleteIpamExternalResourceVerificationTokenInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_ipam_external_resource_verification_token::DeleteIpamExternalResourceVerificationTokenInput {
                dry_run: self.dry_run,
                ipam_external_resource_verification_token_id: self.ipam_external_resource_verification_token_id,
            },
        )
    }
}
