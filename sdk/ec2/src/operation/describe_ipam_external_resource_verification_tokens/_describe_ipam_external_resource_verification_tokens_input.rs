// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeIpamExternalResourceVerificationTokensInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
    /// <p>One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.</p>
    /// <p>Available filters:</p>
    /// <ul>
    /// <li>
    /// <p><code>ipam-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-id</code></p></li>
    /// <li>
    /// <p><code>ipam-id</code></p></li>
    /// <li>
    /// <p><code>ipam-region</code></p></li>
    /// <li>
    /// <p><code>state</code></p></li>
    /// <li>
    /// <p><code>status</code></p></li>
    /// <li>
    /// <p><code>token-name</code></p></li>
    /// <li>
    /// <p><code>token-value</code></p></li>
    /// </ul>
    pub filters: ::std::option::Option<::std::vec::Vec<crate::types::Filter>>,
    /// <p>The token for the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of tokens to return in one page of results.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>Verification token IDs.</p>
    pub ipam_external_resource_verification_token_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeIpamExternalResourceVerificationTokensInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
    /// <p>One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.</p>
    /// <p>Available filters:</p>
    /// <ul>
    /// <li>
    /// <p><code>ipam-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-id</code></p></li>
    /// <li>
    /// <p><code>ipam-id</code></p></li>
    /// <li>
    /// <p><code>ipam-region</code></p></li>
    /// <li>
    /// <p><code>state</code></p></li>
    /// <li>
    /// <p><code>status</code></p></li>
    /// <li>
    /// <p><code>token-name</code></p></li>
    /// <li>
    /// <p><code>token-value</code></p></li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.filters.is_none()`.
    pub fn filters(&self) -> &[crate::types::Filter] {
        self.filters.as_deref().unwrap_or_default()
    }
    /// <p>The token for the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of tokens to return in one page of results.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>Verification token IDs.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.ipam_external_resource_verification_token_ids.is_none()`.
    pub fn ipam_external_resource_verification_token_ids(&self) -> &[::std::string::String] {
        self.ipam_external_resource_verification_token_ids.as_deref().unwrap_or_default()
    }
}
impl DescribeIpamExternalResourceVerificationTokensInput {
    /// Creates a new builder-style object to manufacture [`DescribeIpamExternalResourceVerificationTokensInput`](crate::operation::describe_ipam_external_resource_verification_tokens::DescribeIpamExternalResourceVerificationTokensInput).
    pub fn builder(
    ) -> crate::operation::describe_ipam_external_resource_verification_tokens::builders::DescribeIpamExternalResourceVerificationTokensInputBuilder
    {
        crate::operation::describe_ipam_external_resource_verification_tokens::builders::DescribeIpamExternalResourceVerificationTokensInputBuilder::default()
    }
}

/// A builder for [`DescribeIpamExternalResourceVerificationTokensInput`](crate::operation::describe_ipam_external_resource_verification_tokens::DescribeIpamExternalResourceVerificationTokensInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeIpamExternalResourceVerificationTokensInputBuilder {
    pub(crate) dry_run: ::std::option::Option<bool>,
    pub(crate) filters: ::std::option::Option<::std::vec::Vec<crate::types::Filter>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) ipam_external_resource_verification_token_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeIpamExternalResourceVerificationTokensInputBuilder {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// Appends an item to `filters`.
    ///
    /// To override the contents of this collection use [`set_filters`](Self::set_filters).
    ///
    /// <p>One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.</p>
    /// <p>Available filters:</p>
    /// <ul>
    /// <li>
    /// <p><code>ipam-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-id</code></p></li>
    /// <li>
    /// <p><code>ipam-id</code></p></li>
    /// <li>
    /// <p><code>ipam-region</code></p></li>
    /// <li>
    /// <p><code>state</code></p></li>
    /// <li>
    /// <p><code>status</code></p></li>
    /// <li>
    /// <p><code>token-name</code></p></li>
    /// <li>
    /// <p><code>token-value</code></p></li>
    /// </ul>
    pub fn filters(mut self, input: crate::types::Filter) -> Self {
        let mut v = self.filters.unwrap_or_default();
        v.push(input);
        self.filters = ::std::option::Option::Some(v);
        self
    }
    /// <p>One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.</p>
    /// <p>Available filters:</p>
    /// <ul>
    /// <li>
    /// <p><code>ipam-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-id</code></p></li>
    /// <li>
    /// <p><code>ipam-id</code></p></li>
    /// <li>
    /// <p><code>ipam-region</code></p></li>
    /// <li>
    /// <p><code>state</code></p></li>
    /// <li>
    /// <p><code>status</code></p></li>
    /// <li>
    /// <p><code>token-name</code></p></li>
    /// <li>
    /// <p><code>token-value</code></p></li>
    /// </ul>
    pub fn set_filters(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Filter>>) -> Self {
        self.filters = input;
        self
    }
    /// <p>One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.</p>
    /// <p>Available filters:</p>
    /// <ul>
    /// <li>
    /// <p><code>ipam-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-arn</code></p></li>
    /// <li>
    /// <p><code>ipam-external-resource-verification-token-id</code></p></li>
    /// <li>
    /// <p><code>ipam-id</code></p></li>
    /// <li>
    /// <p><code>ipam-region</code></p></li>
    /// <li>
    /// <p><code>state</code></p></li>
    /// <li>
    /// <p><code>status</code></p></li>
    /// <li>
    /// <p><code>token-name</code></p></li>
    /// <li>
    /// <p><code>token-value</code></p></li>
    /// </ul>
    pub fn get_filters(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Filter>> {
        &self.filters
    }
    /// <p>The token for the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token for the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token for the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of tokens to return in one page of results.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of tokens to return in one page of results.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of tokens to return in one page of results.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Appends an item to `ipam_external_resource_verification_token_ids`.
    ///
    /// To override the contents of this collection use [`set_ipam_external_resource_verification_token_ids`](Self::set_ipam_external_resource_verification_token_ids).
    ///
    /// <p>Verification token IDs.</p>
    pub fn ipam_external_resource_verification_token_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.ipam_external_resource_verification_token_ids.unwrap_or_default();
        v.push(input.into());
        self.ipam_external_resource_verification_token_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>Verification token IDs.</p>
    pub fn set_ipam_external_resource_verification_token_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.ipam_external_resource_verification_token_ids = input;
        self
    }
    /// <p>Verification token IDs.</p>
    pub fn get_ipam_external_resource_verification_token_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.ipam_external_resource_verification_token_ids
    }
    /// Consumes the builder and constructs a [`DescribeIpamExternalResourceVerificationTokensInput`](crate::operation::describe_ipam_external_resource_verification_tokens::DescribeIpamExternalResourceVerificationTokensInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_ipam_external_resource_verification_tokens::DescribeIpamExternalResourceVerificationTokensInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_ipam_external_resource_verification_tokens::DescribeIpamExternalResourceVerificationTokensInput {
                dry_run: self.dry_run,
                filters: self.filters,
                next_token: self.next_token,
                max_results: self.max_results,
                ipam_external_resource_verification_token_ids: self.ipam_external_resource_verification_token_ids,
            },
        )
    }
}
