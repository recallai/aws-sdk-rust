// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteRouteServerPeerOutput {
    /// <p>Information about the deleted route server peer.</p>
    pub route_server_peer: ::std::option::Option<crate::types::RouteServerPeer>,
    _request_id: Option<String>,
}
impl DeleteRouteServerPeerOutput {
    /// <p>Information about the deleted route server peer.</p>
    pub fn route_server_peer(&self) -> ::std::option::Option<&crate::types::RouteServerPeer> {
        self.route_server_peer.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for DeleteRouteServerPeerOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteRouteServerPeerOutput {
    /// Creates a new builder-style object to manufacture [`DeleteRouteServerPeerOutput`](crate::operation::delete_route_server_peer::DeleteRouteServerPeerOutput).
    pub fn builder() -> crate::operation::delete_route_server_peer::builders::DeleteRouteServerPeerOutputBuilder {
        crate::operation::delete_route_server_peer::builders::DeleteRouteServerPeerOutputBuilder::default()
    }
}

/// A builder for [`DeleteRouteServerPeerOutput`](crate::operation::delete_route_server_peer::DeleteRouteServerPeerOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteRouteServerPeerOutputBuilder {
    pub(crate) route_server_peer: ::std::option::Option<crate::types::RouteServerPeer>,
    _request_id: Option<String>,
}
impl DeleteRouteServerPeerOutputBuilder {
    /// <p>Information about the deleted route server peer.</p>
    pub fn route_server_peer(mut self, input: crate::types::RouteServerPeer) -> Self {
        self.route_server_peer = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the deleted route server peer.</p>
    pub fn set_route_server_peer(mut self, input: ::std::option::Option<crate::types::RouteServerPeer>) -> Self {
        self.route_server_peer = input;
        self
    }
    /// <p>Information about the deleted route server peer.</p>
    pub fn get_route_server_peer(&self) -> &::std::option::Option<crate::types::RouteServerPeer> {
        &self.route_server_peer
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteRouteServerPeerOutput`](crate::operation::delete_route_server_peer::DeleteRouteServerPeerOutput).
    pub fn build(self) -> crate::operation::delete_route_server_peer::DeleteRouteServerPeerOutput {
        crate::operation::delete_route_server_peer::DeleteRouteServerPeerOutput {
            route_server_peer: self.route_server_peer,
            _request_id: self._request_id,
        }
    }
}
