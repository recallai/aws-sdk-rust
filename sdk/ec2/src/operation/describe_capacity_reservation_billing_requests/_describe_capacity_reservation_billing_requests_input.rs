// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeCapacityReservationBillingRequestsInput {
    /// <p>The ID of the Capacity Reservation.</p>
    pub capacity_reservation_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>Specify one of the following:</p>
    /// <ul>
    /// <li>
    /// <p><code>odcr-owner</code> - If you are the Capacity Reservation owner, specify this value to view requests that you have initiated. Not supported with the <code>requested-by</code> filter.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - If you are the consumer account, specify this value to view requests that have been sent to you. Not supported with the <code>unused-reservation-billing-owner</code> filter.</p></li>
    /// </ul>
    pub role: ::std::option::Option<crate::types::CallerRole>,
    /// <p>The token to use to retrieve the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>One or more filters.</p>
    /// <ul>
    /// <li>
    /// <p><code>status</code> - The state of the request (<code>pending</code> | <code>accepted</code> | <code>rejected</code> | <code>cancelled</code> | <code>revoked</code> | <code>expired</code>).</p></li>
    /// <li>
    /// <p><code>requested-by</code> - The account ID of the Capacity Reservation owner that initiated the request. Not supported if you specify <code>requested-by</code> for <b>Role</b>.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - The ID of the consumer account to which the request was sent. Not supported if you specify <code>unused-reservation-billing-owner</code> for <b>Role</b>.</p></li>
    /// </ul>
    pub filters: ::std::option::Option<::std::vec::Vec<crate::types::Filter>>,
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
}
impl DescribeCapacityReservationBillingRequestsInput {
    /// <p>The ID of the Capacity Reservation.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.capacity_reservation_ids.is_none()`.
    pub fn capacity_reservation_ids(&self) -> &[::std::string::String] {
        self.capacity_reservation_ids.as_deref().unwrap_or_default()
    }
    /// <p>Specify one of the following:</p>
    /// <ul>
    /// <li>
    /// <p><code>odcr-owner</code> - If you are the Capacity Reservation owner, specify this value to view requests that you have initiated. Not supported with the <code>requested-by</code> filter.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - If you are the consumer account, specify this value to view requests that have been sent to you. Not supported with the <code>unused-reservation-billing-owner</code> filter.</p></li>
    /// </ul>
    pub fn role(&self) -> ::std::option::Option<&crate::types::CallerRole> {
        self.role.as_ref()
    }
    /// <p>The token to use to retrieve the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>One or more filters.</p>
    /// <ul>
    /// <li>
    /// <p><code>status</code> - The state of the request (<code>pending</code> | <code>accepted</code> | <code>rejected</code> | <code>cancelled</code> | <code>revoked</code> | <code>expired</code>).</p></li>
    /// <li>
    /// <p><code>requested-by</code> - The account ID of the Capacity Reservation owner that initiated the request. Not supported if you specify <code>requested-by</code> for <b>Role</b>.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - The ID of the consumer account to which the request was sent. Not supported if you specify <code>unused-reservation-billing-owner</code> for <b>Role</b>.</p></li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.filters.is_none()`.
    pub fn filters(&self) -> &[crate::types::Filter] {
        self.filters.as_deref().unwrap_or_default()
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
}
impl DescribeCapacityReservationBillingRequestsInput {
    /// Creates a new builder-style object to manufacture [`DescribeCapacityReservationBillingRequestsInput`](crate::operation::describe_capacity_reservation_billing_requests::DescribeCapacityReservationBillingRequestsInput).
    pub fn builder(
    ) -> crate::operation::describe_capacity_reservation_billing_requests::builders::DescribeCapacityReservationBillingRequestsInputBuilder {
        crate::operation::describe_capacity_reservation_billing_requests::builders::DescribeCapacityReservationBillingRequestsInputBuilder::default()
    }
}

/// A builder for [`DescribeCapacityReservationBillingRequestsInput`](crate::operation::describe_capacity_reservation_billing_requests::DescribeCapacityReservationBillingRequestsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeCapacityReservationBillingRequestsInputBuilder {
    pub(crate) capacity_reservation_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) role: ::std::option::Option<crate::types::CallerRole>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) filters: ::std::option::Option<::std::vec::Vec<crate::types::Filter>>,
    pub(crate) dry_run: ::std::option::Option<bool>,
}
impl DescribeCapacityReservationBillingRequestsInputBuilder {
    /// Appends an item to `capacity_reservation_ids`.
    ///
    /// To override the contents of this collection use [`set_capacity_reservation_ids`](Self::set_capacity_reservation_ids).
    ///
    /// <p>The ID of the Capacity Reservation.</p>
    pub fn capacity_reservation_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.capacity_reservation_ids.unwrap_or_default();
        v.push(input.into());
        self.capacity_reservation_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The ID of the Capacity Reservation.</p>
    pub fn set_capacity_reservation_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.capacity_reservation_ids = input;
        self
    }
    /// <p>The ID of the Capacity Reservation.</p>
    pub fn get_capacity_reservation_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.capacity_reservation_ids
    }
    /// <p>Specify one of the following:</p>
    /// <ul>
    /// <li>
    /// <p><code>odcr-owner</code> - If you are the Capacity Reservation owner, specify this value to view requests that you have initiated. Not supported with the <code>requested-by</code> filter.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - If you are the consumer account, specify this value to view requests that have been sent to you. Not supported with the <code>unused-reservation-billing-owner</code> filter.</p></li>
    /// </ul>
    /// This field is required.
    pub fn role(mut self, input: crate::types::CallerRole) -> Self {
        self.role = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specify one of the following:</p>
    /// <ul>
    /// <li>
    /// <p><code>odcr-owner</code> - If you are the Capacity Reservation owner, specify this value to view requests that you have initiated. Not supported with the <code>requested-by</code> filter.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - If you are the consumer account, specify this value to view requests that have been sent to you. Not supported with the <code>unused-reservation-billing-owner</code> filter.</p></li>
    /// </ul>
    pub fn set_role(mut self, input: ::std::option::Option<crate::types::CallerRole>) -> Self {
        self.role = input;
        self
    }
    /// <p>Specify one of the following:</p>
    /// <ul>
    /// <li>
    /// <p><code>odcr-owner</code> - If you are the Capacity Reservation owner, specify this value to view requests that you have initiated. Not supported with the <code>requested-by</code> filter.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - If you are the consumer account, specify this value to view requests that have been sent to you. Not supported with the <code>unused-reservation-billing-owner</code> filter.</p></li>
    /// </ul>
    pub fn get_role(&self) -> &::std::option::Option<crate::types::CallerRole> {
        &self.role
    }
    /// <p>The token to use to retrieve the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token to use to retrieve the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token to use to retrieve the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Appends an item to `filters`.
    ///
    /// To override the contents of this collection use [`set_filters`](Self::set_filters).
    ///
    /// <p>One or more filters.</p>
    /// <ul>
    /// <li>
    /// <p><code>status</code> - The state of the request (<code>pending</code> | <code>accepted</code> | <code>rejected</code> | <code>cancelled</code> | <code>revoked</code> | <code>expired</code>).</p></li>
    /// <li>
    /// <p><code>requested-by</code> - The account ID of the Capacity Reservation owner that initiated the request. Not supported if you specify <code>requested-by</code> for <b>Role</b>.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - The ID of the consumer account to which the request was sent. Not supported if you specify <code>unused-reservation-billing-owner</code> for <b>Role</b>.</p></li>
    /// </ul>
    pub fn filters(mut self, input: crate::types::Filter) -> Self {
        let mut v = self.filters.unwrap_or_default();
        v.push(input);
        self.filters = ::std::option::Option::Some(v);
        self
    }
    /// <p>One or more filters.</p>
    /// <ul>
    /// <li>
    /// <p><code>status</code> - The state of the request (<code>pending</code> | <code>accepted</code> | <code>rejected</code> | <code>cancelled</code> | <code>revoked</code> | <code>expired</code>).</p></li>
    /// <li>
    /// <p><code>requested-by</code> - The account ID of the Capacity Reservation owner that initiated the request. Not supported if you specify <code>requested-by</code> for <b>Role</b>.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - The ID of the consumer account to which the request was sent. Not supported if you specify <code>unused-reservation-billing-owner</code> for <b>Role</b>.</p></li>
    /// </ul>
    pub fn set_filters(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Filter>>) -> Self {
        self.filters = input;
        self
    }
    /// <p>One or more filters.</p>
    /// <ul>
    /// <li>
    /// <p><code>status</code> - The state of the request (<code>pending</code> | <code>accepted</code> | <code>rejected</code> | <code>cancelled</code> | <code>revoked</code> | <code>expired</code>).</p></li>
    /// <li>
    /// <p><code>requested-by</code> - The account ID of the Capacity Reservation owner that initiated the request. Not supported if you specify <code>requested-by</code> for <b>Role</b>.</p></li>
    /// <li>
    /// <p><code>unused-reservation-billing-owner</code> - The ID of the consumer account to which the request was sent. Not supported if you specify <code>unused-reservation-billing-owner</code> for <b>Role</b>.</p></li>
    /// </ul>
    pub fn get_filters(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Filter>> {
        &self.filters
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// Consumes the builder and constructs a [`DescribeCapacityReservationBillingRequestsInput`](crate::operation::describe_capacity_reservation_billing_requests::DescribeCapacityReservationBillingRequestsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_capacity_reservation_billing_requests::DescribeCapacityReservationBillingRequestsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_capacity_reservation_billing_requests::DescribeCapacityReservationBillingRequestsInput {
                capacity_reservation_ids: self.capacity_reservation_ids,
                role: self.role,
                next_token: self.next_token,
                max_results: self.max_results,
                filters: self.filters,
                dry_run: self.dry_run,
            },
        )
    }
}
