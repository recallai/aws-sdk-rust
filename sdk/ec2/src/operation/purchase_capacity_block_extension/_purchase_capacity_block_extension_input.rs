// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PurchaseCapacityBlockExtensionInput {
    /// <p>The ID of the Capacity Block extension offering to purchase.</p>
    pub capacity_block_extension_offering_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the Capacity reservation to be extended.</p>
    pub capacity_reservation_id: ::std::option::Option<::std::string::String>,
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
}
impl PurchaseCapacityBlockExtensionInput {
    /// <p>The ID of the Capacity Block extension offering to purchase.</p>
    pub fn capacity_block_extension_offering_id(&self) -> ::std::option::Option<&str> {
        self.capacity_block_extension_offering_id.as_deref()
    }
    /// <p>The ID of the Capacity reservation to be extended.</p>
    pub fn capacity_reservation_id(&self) -> ::std::option::Option<&str> {
        self.capacity_reservation_id.as_deref()
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
}
impl PurchaseCapacityBlockExtensionInput {
    /// Creates a new builder-style object to manufacture [`PurchaseCapacityBlockExtensionInput`](crate::operation::purchase_capacity_block_extension::PurchaseCapacityBlockExtensionInput).
    pub fn builder() -> crate::operation::purchase_capacity_block_extension::builders::PurchaseCapacityBlockExtensionInputBuilder {
        crate::operation::purchase_capacity_block_extension::builders::PurchaseCapacityBlockExtensionInputBuilder::default()
    }
}

/// A builder for [`PurchaseCapacityBlockExtensionInput`](crate::operation::purchase_capacity_block_extension::PurchaseCapacityBlockExtensionInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PurchaseCapacityBlockExtensionInputBuilder {
    pub(crate) capacity_block_extension_offering_id: ::std::option::Option<::std::string::String>,
    pub(crate) capacity_reservation_id: ::std::option::Option<::std::string::String>,
    pub(crate) dry_run: ::std::option::Option<bool>,
}
impl PurchaseCapacityBlockExtensionInputBuilder {
    /// <p>The ID of the Capacity Block extension offering to purchase.</p>
    /// This field is required.
    pub fn capacity_block_extension_offering_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.capacity_block_extension_offering_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Capacity Block extension offering to purchase.</p>
    pub fn set_capacity_block_extension_offering_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.capacity_block_extension_offering_id = input;
        self
    }
    /// <p>The ID of the Capacity Block extension offering to purchase.</p>
    pub fn get_capacity_block_extension_offering_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.capacity_block_extension_offering_id
    }
    /// <p>The ID of the Capacity reservation to be extended.</p>
    /// This field is required.
    pub fn capacity_reservation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.capacity_reservation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Capacity reservation to be extended.</p>
    pub fn set_capacity_reservation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.capacity_reservation_id = input;
        self
    }
    /// <p>The ID of the Capacity reservation to be extended.</p>
    pub fn get_capacity_reservation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.capacity_reservation_id
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// Consumes the builder and constructs a [`PurchaseCapacityBlockExtensionInput`](crate::operation::purchase_capacity_block_extension::PurchaseCapacityBlockExtensionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::purchase_capacity_block_extension::PurchaseCapacityBlockExtensionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::purchase_capacity_block_extension::PurchaseCapacityBlockExtensionInput {
            capacity_block_extension_offering_id: self.capacity_block_extension_offering_id,
            capacity_reservation_id: self.capacity_reservation_id,
            dry_run: self.dry_run,
        })
    }
}
