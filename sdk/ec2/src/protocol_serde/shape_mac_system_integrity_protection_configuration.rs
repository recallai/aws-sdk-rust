// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_mac_system_integrity_protection_configuration(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> ::std::result::Result<crate::types::MacSystemIntegrityProtectionConfiguration, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::MacSystemIntegrityProtectionConfiguration::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("appleInternal") /* AppleInternal com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$AppleInternal */ =>  {
                let var_1 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_apple_internal(var_1);
            }
            ,
            s if s.matches("baseSystem") /* BaseSystem com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$BaseSystem */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_base_system(var_2);
            }
            ,
            s if s.matches("debuggingRestrictions") /* DebuggingRestrictions com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$DebuggingRestrictions */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_debugging_restrictions(var_3);
            }
            ,
            s if s.matches("dTraceRestrictions") /* DTraceRestrictions com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$DTraceRestrictions */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_d_trace_restrictions(var_4);
            }
            ,
            s if s.matches("filesystemProtections") /* FilesystemProtections com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$FilesystemProtections */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_filesystem_protections(var_5);
            }
            ,
            s if s.matches("kextSigning") /* KextSigning com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$KextSigning */ =>  {
                let var_6 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_kext_signing(var_6);
            }
            ,
            s if s.matches("nvramProtections") /* NvramProtections com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$NvramProtections */ =>  {
                let var_7 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_nvram_protections(var_7);
            }
            ,
            s if s.matches("status") /* Status com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration$Status */ =>  {
                let var_8 =
                    Some(
                        Result::<crate::types::MacSystemIntegrityProtectionSettingStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MacSystemIntegrityProtectionSettingStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_8);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
