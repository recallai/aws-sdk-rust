// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_vpc_block_public_access_options(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> ::std::result::Result<crate::types::VpcBlockPublicAccessOptions, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::VpcBlockPublicAccessOptions::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("awsAccountId") /* AwsAccountId com.amazonaws.ec2#VpcBlockPublicAccessOptions$AwsAccountId */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_aws_account_id(var_1);
            }
            ,
            s if s.matches("awsRegion") /* AwsRegion com.amazonaws.ec2#VpcBlockPublicAccessOptions$AwsRegion */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_aws_region(var_2);
            }
            ,
            s if s.matches("state") /* State com.amazonaws.ec2#VpcBlockPublicAccessOptions$State */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::VpcBlockPublicAccessState, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::VpcBlockPublicAccessState::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_state(var_3);
            }
            ,
            s if s.matches("internetGatewayBlockMode") /* InternetGatewayBlockMode com.amazonaws.ec2#VpcBlockPublicAccessOptions$InternetGatewayBlockMode */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::InternetGatewayBlockMode, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::InternetGatewayBlockMode::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_internet_gateway_block_mode(var_4);
            }
            ,
            s if s.matches("reason") /* Reason com.amazonaws.ec2#VpcBlockPublicAccessOptions$Reason */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_reason(var_5);
            }
            ,
            s if s.matches("lastUpdateTimestamp") /* LastUpdateTimestamp com.amazonaws.ec2#VpcBlockPublicAccessOptions$LastUpdateTimestamp */ =>  {
                let var_6 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_last_update_timestamp(var_6);
            }
            ,
            s if s.matches("managedBy") /* ManagedBy com.amazonaws.ec2#VpcBlockPublicAccessOptions$ManagedBy */ =>  {
                let var_7 =
                    Some(
                        Result::<crate::types::ManagedBy, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ManagedBy::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_managed_by(var_7);
            }
            ,
            s if s.matches("exclusionsAllowed") /* ExclusionsAllowed com.amazonaws.ec2#VpcBlockPublicAccessOptions$ExclusionsAllowed */ =>  {
                let var_8 =
                    Some(
                        Result::<crate::types::VpcBlockPublicAccessExclusionsAllowed, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::VpcBlockPublicAccessExclusionsAllowed::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_exclusions_allowed(var_8);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
