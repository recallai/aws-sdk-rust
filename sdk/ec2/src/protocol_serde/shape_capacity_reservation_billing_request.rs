// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_capacity_reservation_billing_request(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> ::std::result::Result<crate::types::CapacityReservationBillingRequest, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::CapacityReservationBillingRequest::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("capacityReservationId") /* CapacityReservationId com.amazonaws.ec2#CapacityReservationBillingRequest$CapacityReservationId */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_capacity_reservation_id(var_1);
            }
            ,
            s if s.matches("requestedBy") /* RequestedBy com.amazonaws.ec2#CapacityReservationBillingRequest$RequestedBy */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_requested_by(var_2);
            }
            ,
            s if s.matches("unusedReservationBillingOwnerId") /* UnusedReservationBillingOwnerId com.amazonaws.ec2#CapacityReservationBillingRequest$UnusedReservationBillingOwnerId */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_unused_reservation_billing_owner_id(var_3);
            }
            ,
            s if s.matches("lastUpdateTime") /* LastUpdateTime com.amazonaws.ec2#CapacityReservationBillingRequest$LastUpdateTime */ =>  {
                let var_4 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_last_update_time(var_4);
            }
            ,
            s if s.matches("status") /* Status com.amazonaws.ec2#CapacityReservationBillingRequest$Status */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::CapacityReservationBillingRequestStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::CapacityReservationBillingRequestStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_5);
            }
            ,
            s if s.matches("statusMessage") /* StatusMessage com.amazonaws.ec2#CapacityReservationBillingRequest$StatusMessage */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status_message(var_6);
            }
            ,
            s if s.matches("capacityReservationInfo") /* CapacityReservationInfo com.amazonaws.ec2#CapacityReservationBillingRequest$CapacityReservationInfo */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_capacity_reservation_info::de_capacity_reservation_info(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_capacity_reservation_info(var_7);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
