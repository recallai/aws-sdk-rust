// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_instance_connect_endpoint_public_dns_names(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> ::std::result::Result<crate::types::InstanceConnectEndpointPublicDnsNames, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::InstanceConnectEndpointPublicDnsNames::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ipv4") /* Ipv4 com.amazonaws.ec2#InstanceConnectEndpointPublicDnsNames$Ipv4 */ =>  {
                let var_1 =
                    Some(
                        crate::protocol_serde::shape_instance_connect_endpoint_dns_names::de_instance_connect_endpoint_dns_names(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_ipv4(var_1);
            }
            ,
            s if s.matches("dualstack") /* Dualstack com.amazonaws.ec2#InstanceConnectEndpointPublicDnsNames$Dualstack */ =>  {
                let var_2 =
                    Some(
                        crate::protocol_serde::shape_instance_connect_endpoint_dns_names::de_instance_connect_endpoint_dns_names(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_dualstack(var_2);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
