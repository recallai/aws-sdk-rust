// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_instance_metadata_defaults_input_input_input(
    input: &crate::operation::modify_instance_metadata_defaults::ModifyInstanceMetadataDefaultsInput,
) -> ::std::result::Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ModifyInstanceMetadataDefaults", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("HttpTokens");
    if let Some(var_2) = &input.http_tokens {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("HttpPutResponseHopLimit");
    if let Some(var_4) = &input.http_put_response_hop_limit {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("HttpEndpoint");
    if let Some(var_6) = &input.http_endpoint {
        scope_5.string(var_6.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("InstanceMetadataTags");
    if let Some(var_8) = &input.instance_metadata_tags {
        scope_7.string(var_8.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("DryRun");
    if let Some(var_10) = &input.dry_run {
        scope_9.boolean(*var_10);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
