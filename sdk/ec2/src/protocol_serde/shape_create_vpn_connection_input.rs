// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_vpn_connection_input_input_input(
    input: &crate::operation::create_vpn_connection::CreateVpnConnectionInput,
) -> ::std::result::Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "CreateVpnConnection", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("CustomerGatewayId");
    if let Some(var_2) = &input.customer_gateway_id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Type");
    if let Some(var_4) = &input.r#type {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("VpnGatewayId");
    if let Some(var_6) = &input.vpn_gateway_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("TransitGatewayId");
    if let Some(var_8) = &input.transit_gateway_id {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("TagSpecification");
    if let Some(var_10) = &input.tag_specifications {
        if !var_10.is_empty() {
            let mut list_12 = scope_9.start_list(true, Some("item"));
            for item_11 in var_10 {
                #[allow(unused_mut)]
                let mut entry_13 = list_12.entry();
                crate::protocol_serde::shape_tag_specification::ser_tag_specification(entry_13, item_11)?;
            }
            list_12.finish();
        }
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("PreSharedKeyStorage");
    if let Some(var_15) = &input.pre_shared_key_storage {
        scope_14.string(var_15);
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("DryRun");
    if let Some(var_17) = &input.dry_run {
        scope_16.boolean(*var_17);
    }
    #[allow(unused_mut)]
    let mut scope_18 = writer.prefix("Options");
    if let Some(var_19) = &input.options {
        crate::protocol_serde::shape_vpn_connection_options_specification::ser_vpn_connection_options_specification(scope_18, var_19)?;
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
