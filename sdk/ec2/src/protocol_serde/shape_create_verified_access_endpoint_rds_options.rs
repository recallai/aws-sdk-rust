// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_create_verified_access_endpoint_rds_options(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::CreateVerifiedAccessEndpointRdsOptions,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Protocol");
    if let Some(var_2) = &input.protocol {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Port");
    if let Some(var_4) = &input.port {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("RdsDbInstanceArn");
    if let Some(var_6) = &input.rds_db_instance_arn {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("RdsDbClusterArn");
    if let Some(var_8) = &input.rds_db_cluster_arn {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("RdsDbProxyArn");
    if let Some(var_10) = &input.rds_db_proxy_arn {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("RdsEndpoint");
    if let Some(var_12) = &input.rds_endpoint {
        scope_11.string(var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("SubnetId");
    if let Some(var_14) = &input.subnet_ids {
        if !var_14.is_empty() {
            let mut list_16 = scope_13.start_list(true, Some("item"));
            for item_15 in var_14 {
                #[allow(unused_mut)]
                let mut entry_17 = list_16.entry();
                entry_17.string(item_15);
            }
            list_16.finish();
        }
    }
    Ok(())
}
