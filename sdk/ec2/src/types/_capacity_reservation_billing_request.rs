// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a request to assign billing of the unused capacity of a Capacity Reservation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CapacityReservationBillingRequest {
    /// <p>The ID of the Capacity Reservation.</p>
    pub capacity_reservation_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the Amazon Web Services account that initiated the request.</p>
    pub requested_by: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the Amazon Web Services account to which the request was sent.</p>
    pub unused_reservation_billing_owner_id: ::std::option::Option<::std::string::String>,
    /// <p>The date and time, in UTC time format, at which the request was initiated.</p>
    pub last_update_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The status of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-billing-transfers.html"> View billing assignment requests for a shared Amazon EC2 Capacity Reservation</a>.</p>
    pub status: ::std::option::Option<crate::types::CapacityReservationBillingRequestStatus>,
    /// <p>Information about the status.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
    /// <p>Information about the Capacity Reservation.</p>
    pub capacity_reservation_info: ::std::option::Option<crate::types::CapacityReservationInfo>,
}
impl CapacityReservationBillingRequest {
    /// <p>The ID of the Capacity Reservation.</p>
    pub fn capacity_reservation_id(&self) -> ::std::option::Option<&str> {
        self.capacity_reservation_id.as_deref()
    }
    /// <p>The ID of the Amazon Web Services account that initiated the request.</p>
    pub fn requested_by(&self) -> ::std::option::Option<&str> {
        self.requested_by.as_deref()
    }
    /// <p>The ID of the Amazon Web Services account to which the request was sent.</p>
    pub fn unused_reservation_billing_owner_id(&self) -> ::std::option::Option<&str> {
        self.unused_reservation_billing_owner_id.as_deref()
    }
    /// <p>The date and time, in UTC time format, at which the request was initiated.</p>
    pub fn last_update_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_update_time.as_ref()
    }
    /// <p>The status of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-billing-transfers.html"> View billing assignment requests for a shared Amazon EC2 Capacity Reservation</a>.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::CapacityReservationBillingRequestStatus> {
        self.status.as_ref()
    }
    /// <p>Information about the status.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>Information about the Capacity Reservation.</p>
    pub fn capacity_reservation_info(&self) -> ::std::option::Option<&crate::types::CapacityReservationInfo> {
        self.capacity_reservation_info.as_ref()
    }
}
impl CapacityReservationBillingRequest {
    /// Creates a new builder-style object to manufacture [`CapacityReservationBillingRequest`](crate::types::CapacityReservationBillingRequest).
    pub fn builder() -> crate::types::builders::CapacityReservationBillingRequestBuilder {
        crate::types::builders::CapacityReservationBillingRequestBuilder::default()
    }
}

/// A builder for [`CapacityReservationBillingRequest`](crate::types::CapacityReservationBillingRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CapacityReservationBillingRequestBuilder {
    pub(crate) capacity_reservation_id: ::std::option::Option<::std::string::String>,
    pub(crate) requested_by: ::std::option::Option<::std::string::String>,
    pub(crate) unused_reservation_billing_owner_id: ::std::option::Option<::std::string::String>,
    pub(crate) last_update_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::CapacityReservationBillingRequestStatus>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
    pub(crate) capacity_reservation_info: ::std::option::Option<crate::types::CapacityReservationInfo>,
}
impl CapacityReservationBillingRequestBuilder {
    /// <p>The ID of the Capacity Reservation.</p>
    pub fn capacity_reservation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.capacity_reservation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Capacity Reservation.</p>
    pub fn set_capacity_reservation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.capacity_reservation_id = input;
        self
    }
    /// <p>The ID of the Capacity Reservation.</p>
    pub fn get_capacity_reservation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.capacity_reservation_id
    }
    /// <p>The ID of the Amazon Web Services account that initiated the request.</p>
    pub fn requested_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.requested_by = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account that initiated the request.</p>
    pub fn set_requested_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.requested_by = input;
        self
    }
    /// <p>The ID of the Amazon Web Services account that initiated the request.</p>
    pub fn get_requested_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.requested_by
    }
    /// <p>The ID of the Amazon Web Services account to which the request was sent.</p>
    pub fn unused_reservation_billing_owner_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.unused_reservation_billing_owner_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account to which the request was sent.</p>
    pub fn set_unused_reservation_billing_owner_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.unused_reservation_billing_owner_id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services account to which the request was sent.</p>
    pub fn get_unused_reservation_billing_owner_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.unused_reservation_billing_owner_id
    }
    /// <p>The date and time, in UTC time format, at which the request was initiated.</p>
    pub fn last_update_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_update_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time, in UTC time format, at which the request was initiated.</p>
    pub fn set_last_update_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_update_time = input;
        self
    }
    /// <p>The date and time, in UTC time format, at which the request was initiated.</p>
    pub fn get_last_update_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_update_time
    }
    /// <p>The status of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-billing-transfers.html"> View billing assignment requests for a shared Amazon EC2 Capacity Reservation</a>.</p>
    pub fn status(mut self, input: crate::types::CapacityReservationBillingRequestStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-billing-transfers.html"> View billing assignment requests for a shared Amazon EC2 Capacity Reservation</a>.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::CapacityReservationBillingRequestStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-billing-transfers.html"> View billing assignment requests for a shared Amazon EC2 Capacity Reservation</a>.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::CapacityReservationBillingRequestStatus> {
        &self.status
    }
    /// <p>Information about the status.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Information about the status.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>Information about the status.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// <p>Information about the Capacity Reservation.</p>
    pub fn capacity_reservation_info(mut self, input: crate::types::CapacityReservationInfo) -> Self {
        self.capacity_reservation_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the Capacity Reservation.</p>
    pub fn set_capacity_reservation_info(mut self, input: ::std::option::Option<crate::types::CapacityReservationInfo>) -> Self {
        self.capacity_reservation_info = input;
        self
    }
    /// <p>Information about the Capacity Reservation.</p>
    pub fn get_capacity_reservation_info(&self) -> &::std::option::Option<crate::types::CapacityReservationInfo> {
        &self.capacity_reservation_info
    }
    /// Consumes the builder and constructs a [`CapacityReservationBillingRequest`](crate::types::CapacityReservationBillingRequest).
    pub fn build(self) -> crate::types::CapacityReservationBillingRequest {
        crate::types::CapacityReservationBillingRequest {
            capacity_reservation_id: self.capacity_reservation_id,
            requested_by: self.requested_by,
            unused_reservation_billing_owner_id: self.unused_reservation_billing_owner_id,
            last_update_time: self.last_update_time,
            status: self.status,
            status_message: self.status_message,
            capacity_reservation_info: self.capacity_reservation_info,
        }
    }
}
