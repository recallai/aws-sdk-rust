// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides a summary of the attached EBS volume status for an instance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EbsStatusSummary {
    /// <p>Details about the attached EBS status check for an instance.</p>
    pub details: ::std::option::Option<::std::vec::Vec<crate::types::EbsStatusDetails>>,
    /// <p>The current status.</p>
    pub status: ::std::option::Option<crate::types::SummaryStatus>,
}
impl EbsStatusSummary {
    /// <p>Details about the attached EBS status check for an instance.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.details.is_none()`.
    pub fn details(&self) -> &[crate::types::EbsStatusDetails] {
        self.details.as_deref().unwrap_or_default()
    }
    /// <p>The current status.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::SummaryStatus> {
        self.status.as_ref()
    }
}
impl EbsStatusSummary {
    /// Creates a new builder-style object to manufacture [`EbsStatusSummary`](crate::types::EbsStatusSummary).
    pub fn builder() -> crate::types::builders::EbsStatusSummaryBuilder {
        crate::types::builders::EbsStatusSummaryBuilder::default()
    }
}

/// A builder for [`EbsStatusSummary`](crate::types::EbsStatusSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EbsStatusSummaryBuilder {
    pub(crate) details: ::std::option::Option<::std::vec::Vec<crate::types::EbsStatusDetails>>,
    pub(crate) status: ::std::option::Option<crate::types::SummaryStatus>,
}
impl EbsStatusSummaryBuilder {
    /// Appends an item to `details`.
    ///
    /// To override the contents of this collection use [`set_details`](Self::set_details).
    ///
    /// <p>Details about the attached EBS status check for an instance.</p>
    pub fn details(mut self, input: crate::types::EbsStatusDetails) -> Self {
        let mut v = self.details.unwrap_or_default();
        v.push(input);
        self.details = ::std::option::Option::Some(v);
        self
    }
    /// <p>Details about the attached EBS status check for an instance.</p>
    pub fn set_details(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::EbsStatusDetails>>) -> Self {
        self.details = input;
        self
    }
    /// <p>Details about the attached EBS status check for an instance.</p>
    pub fn get_details(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::EbsStatusDetails>> {
        &self.details
    }
    /// <p>The current status.</p>
    pub fn status(mut self, input: crate::types::SummaryStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::SummaryStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::SummaryStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`EbsStatusSummary`](crate::types::EbsStatusSummary).
    pub fn build(self) -> crate::types::EbsStatusSummary {
        crate::types::EbsStatusSummary {
            details: self.details,
            status: self.status,
        }
    }
}
