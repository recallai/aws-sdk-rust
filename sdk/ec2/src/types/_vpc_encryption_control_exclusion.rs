// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcEncryptionControlExclusion {
    #[allow(missing_docs)] // documentation missing in model
    pub state: ::std::option::Option<crate::types::VpcEncryptionControlExclusionState>,
    #[allow(missing_docs)] // documentation missing in model
    pub state_message: ::std::option::Option<::std::string::String>,
}
impl VpcEncryptionControlExclusion {
    #[allow(missing_docs)] // documentation missing in model
    pub fn state(&self) -> ::std::option::Option<&crate::types::VpcEncryptionControlExclusionState> {
        self.state.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn state_message(&self) -> ::std::option::Option<&str> {
        self.state_message.as_deref()
    }
}
impl VpcEncryptionControlExclusion {
    /// Creates a new builder-style object to manufacture [`VpcEncryptionControlExclusion`](crate::types::VpcEncryptionControlExclusion).
    pub fn builder() -> crate::types::builders::VpcEncryptionControlExclusionBuilder {
        crate::types::builders::VpcEncryptionControlExclusionBuilder::default()
    }
}

/// A builder for [`VpcEncryptionControlExclusion`](crate::types::VpcEncryptionControlExclusion).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct VpcEncryptionControlExclusionBuilder {
    pub(crate) state: ::std::option::Option<crate::types::VpcEncryptionControlExclusionState>,
    pub(crate) state_message: ::std::option::Option<::std::string::String>,
}
impl VpcEncryptionControlExclusionBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn state(mut self, input: crate::types::VpcEncryptionControlExclusionState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::VpcEncryptionControlExclusionState>) -> Self {
        self.state = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_state(&self) -> &::std::option::Option<crate::types::VpcEncryptionControlExclusionState> {
        &self.state
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn state_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state_message = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_state_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state_message = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_state_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.state_message
    }
    /// Consumes the builder and constructs a [`VpcEncryptionControlExclusion`](crate::types::VpcEncryptionControlExclusion).
    pub fn build(self) -> crate::types::VpcEncryptionControlExclusion {
        crate::types::VpcEncryptionControlExclusion {
            state: self.state,
            state_message: self.state_message,
        }
    }
}
