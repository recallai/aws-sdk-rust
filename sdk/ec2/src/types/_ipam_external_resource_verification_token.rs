// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A verification token is an Amazon Web Services-generated random value that you can use to prove ownership of an external resource. For example, you can use a verification token to validate that you control a public IP address range when you bring an IP address range to Amazon Web Services (BYOIP).</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IpamExternalResourceVerificationToken {
    /// <p>The ID of the token.</p>
    pub ipam_external_resource_verification_token_id: ::std::option::Option<::std::string::String>,
    /// <p>Token ARN.</p>
    pub ipam_external_resource_verification_token_arn: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the IPAM that created the token.</p>
    pub ipam_id: ::std::option::Option<::std::string::String>,
    /// <p>ARN of the IPAM that created the token.</p>
    pub ipam_arn: ::std::option::Option<::std::string::String>,
    /// <p>Region of the IPAM that created the token.</p>
    pub ipam_region: ::std::option::Option<::std::string::String>,
    /// <p>Token value.</p>
    pub token_value: ::std::option::Option<::std::string::String>,
    /// <p>Token name.</p>
    pub token_name: ::std::option::Option<::std::string::String>,
    /// <p>Token expiration.</p>
    pub not_after: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Token status.</p>
    pub status: ::std::option::Option<crate::types::TokenState>,
    /// <p>Token tags.</p>
    pub tags: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>,
    /// <p>Token state.</p>
    pub state: ::std::option::Option<crate::types::IpamExternalResourceVerificationTokenState>,
}
impl IpamExternalResourceVerificationToken {
    /// <p>The ID of the token.</p>
    pub fn ipam_external_resource_verification_token_id(&self) -> ::std::option::Option<&str> {
        self.ipam_external_resource_verification_token_id.as_deref()
    }
    /// <p>Token ARN.</p>
    pub fn ipam_external_resource_verification_token_arn(&self) -> ::std::option::Option<&str> {
        self.ipam_external_resource_verification_token_arn.as_deref()
    }
    /// <p>The ID of the IPAM that created the token.</p>
    pub fn ipam_id(&self) -> ::std::option::Option<&str> {
        self.ipam_id.as_deref()
    }
    /// <p>ARN of the IPAM that created the token.</p>
    pub fn ipam_arn(&self) -> ::std::option::Option<&str> {
        self.ipam_arn.as_deref()
    }
    /// <p>Region of the IPAM that created the token.</p>
    pub fn ipam_region(&self) -> ::std::option::Option<&str> {
        self.ipam_region.as_deref()
    }
    /// <p>Token value.</p>
    pub fn token_value(&self) -> ::std::option::Option<&str> {
        self.token_value.as_deref()
    }
    /// <p>Token name.</p>
    pub fn token_name(&self) -> ::std::option::Option<&str> {
        self.token_name.as_deref()
    }
    /// <p>Token expiration.</p>
    pub fn not_after(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.not_after.as_ref()
    }
    /// <p>Token status.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::TokenState> {
        self.status.as_ref()
    }
    /// <p>Token tags.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.tags.is_none()`.
    pub fn tags(&self) -> &[crate::types::Tag] {
        self.tags.as_deref().unwrap_or_default()
    }
    /// <p>Token state.</p>
    pub fn state(&self) -> ::std::option::Option<&crate::types::IpamExternalResourceVerificationTokenState> {
        self.state.as_ref()
    }
}
impl IpamExternalResourceVerificationToken {
    /// Creates a new builder-style object to manufacture [`IpamExternalResourceVerificationToken`](crate::types::IpamExternalResourceVerificationToken).
    pub fn builder() -> crate::types::builders::IpamExternalResourceVerificationTokenBuilder {
        crate::types::builders::IpamExternalResourceVerificationTokenBuilder::default()
    }
}

/// A builder for [`IpamExternalResourceVerificationToken`](crate::types::IpamExternalResourceVerificationToken).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IpamExternalResourceVerificationTokenBuilder {
    pub(crate) ipam_external_resource_verification_token_id: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_external_resource_verification_token_arn: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_id: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_arn: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_region: ::std::option::Option<::std::string::String>,
    pub(crate) token_value: ::std::option::Option<::std::string::String>,
    pub(crate) token_name: ::std::option::Option<::std::string::String>,
    pub(crate) not_after: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::TokenState>,
    pub(crate) tags: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>,
    pub(crate) state: ::std::option::Option<crate::types::IpamExternalResourceVerificationTokenState>,
}
impl IpamExternalResourceVerificationTokenBuilder {
    /// <p>The ID of the token.</p>
    pub fn ipam_external_resource_verification_token_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_external_resource_verification_token_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the token.</p>
    pub fn set_ipam_external_resource_verification_token_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_external_resource_verification_token_id = input;
        self
    }
    /// <p>The ID of the token.</p>
    pub fn get_ipam_external_resource_verification_token_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_external_resource_verification_token_id
    }
    /// <p>Token ARN.</p>
    pub fn ipam_external_resource_verification_token_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_external_resource_verification_token_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Token ARN.</p>
    pub fn set_ipam_external_resource_verification_token_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_external_resource_verification_token_arn = input;
        self
    }
    /// <p>Token ARN.</p>
    pub fn get_ipam_external_resource_verification_token_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_external_resource_verification_token_arn
    }
    /// <p>The ID of the IPAM that created the token.</p>
    pub fn ipam_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the IPAM that created the token.</p>
    pub fn set_ipam_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_id = input;
        self
    }
    /// <p>The ID of the IPAM that created the token.</p>
    pub fn get_ipam_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_id
    }
    /// <p>ARN of the IPAM that created the token.</p>
    pub fn ipam_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ARN of the IPAM that created the token.</p>
    pub fn set_ipam_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_arn = input;
        self
    }
    /// <p>ARN of the IPAM that created the token.</p>
    pub fn get_ipam_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_arn
    }
    /// <p>Region of the IPAM that created the token.</p>
    pub fn ipam_region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Region of the IPAM that created the token.</p>
    pub fn set_ipam_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_region = input;
        self
    }
    /// <p>Region of the IPAM that created the token.</p>
    pub fn get_ipam_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_region
    }
    /// <p>Token value.</p>
    pub fn token_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Token value.</p>
    pub fn set_token_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token_value = input;
        self
    }
    /// <p>Token value.</p>
    pub fn get_token_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.token_value
    }
    /// <p>Token name.</p>
    pub fn token_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Token name.</p>
    pub fn set_token_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token_name = input;
        self
    }
    /// <p>Token name.</p>
    pub fn get_token_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.token_name
    }
    /// <p>Token expiration.</p>
    pub fn not_after(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.not_after = ::std::option::Option::Some(input);
        self
    }
    /// <p>Token expiration.</p>
    pub fn set_not_after(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.not_after = input;
        self
    }
    /// <p>Token expiration.</p>
    pub fn get_not_after(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.not_after
    }
    /// <p>Token status.</p>
    pub fn status(mut self, input: crate::types::TokenState) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Token status.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::TokenState>) -> Self {
        self.status = input;
        self
    }
    /// <p>Token status.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::TokenState> {
        &self.status
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>Token tags.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = ::std::option::Option::Some(v);
        self
    }
    /// <p>Token tags.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>) -> Self {
        self.tags = input;
        self
    }
    /// <p>Token tags.</p>
    pub fn get_tags(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Tag>> {
        &self.tags
    }
    /// <p>Token state.</p>
    pub fn state(mut self, input: crate::types::IpamExternalResourceVerificationTokenState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>Token state.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::IpamExternalResourceVerificationTokenState>) -> Self {
        self.state = input;
        self
    }
    /// <p>Token state.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::IpamExternalResourceVerificationTokenState> {
        &self.state
    }
    /// Consumes the builder and constructs a [`IpamExternalResourceVerificationToken`](crate::types::IpamExternalResourceVerificationToken).
    pub fn build(self) -> crate::types::IpamExternalResourceVerificationToken {
        crate::types::IpamExternalResourceVerificationToken {
            ipam_external_resource_verification_token_id: self.ipam_external_resource_verification_token_id,
            ipam_external_resource_verification_token_arn: self.ipam_external_resource_verification_token_arn,
            ipam_id: self.ipam_id,
            ipam_arn: self.ipam_arn,
            ipam_region: self.ipam_region,
            token_value: self.token_value,
            token_name: self.token_name,
            not_after: self.not_after,
            status: self.status,
            tags: self.tags,
            state: self.state,
        }
    }
}
