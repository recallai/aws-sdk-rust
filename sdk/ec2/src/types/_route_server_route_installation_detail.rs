// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the installation status of a route in a route table.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteServerRouteInstallationDetail {
    /// <p>The ID of the route table where the route is being installed.</p>
    pub route_table_id: ::std::option::Option<::std::string::String>,
    /// <p>The current installation status of the route in the route table.</p>
    pub route_installation_status: ::std::option::Option<crate::types::RouteServerRouteInstallationStatus>,
    /// <p>The reason for the current installation status of the route.</p>
    pub route_installation_status_reason: ::std::option::Option<::std::string::String>,
}
impl RouteServerRouteInstallationDetail {
    /// <p>The ID of the route table where the route is being installed.</p>
    pub fn route_table_id(&self) -> ::std::option::Option<&str> {
        self.route_table_id.as_deref()
    }
    /// <p>The current installation status of the route in the route table.</p>
    pub fn route_installation_status(&self) -> ::std::option::Option<&crate::types::RouteServerRouteInstallationStatus> {
        self.route_installation_status.as_ref()
    }
    /// <p>The reason for the current installation status of the route.</p>
    pub fn route_installation_status_reason(&self) -> ::std::option::Option<&str> {
        self.route_installation_status_reason.as_deref()
    }
}
impl RouteServerRouteInstallationDetail {
    /// Creates a new builder-style object to manufacture [`RouteServerRouteInstallationDetail`](crate::types::RouteServerRouteInstallationDetail).
    pub fn builder() -> crate::types::builders::RouteServerRouteInstallationDetailBuilder {
        crate::types::builders::RouteServerRouteInstallationDetailBuilder::default()
    }
}

/// A builder for [`RouteServerRouteInstallationDetail`](crate::types::RouteServerRouteInstallationDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteServerRouteInstallationDetailBuilder {
    pub(crate) route_table_id: ::std::option::Option<::std::string::String>,
    pub(crate) route_installation_status: ::std::option::Option<crate::types::RouteServerRouteInstallationStatus>,
    pub(crate) route_installation_status_reason: ::std::option::Option<::std::string::String>,
}
impl RouteServerRouteInstallationDetailBuilder {
    /// <p>The ID of the route table where the route is being installed.</p>
    pub fn route_table_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.route_table_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the route table where the route is being installed.</p>
    pub fn set_route_table_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.route_table_id = input;
        self
    }
    /// <p>The ID of the route table where the route is being installed.</p>
    pub fn get_route_table_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.route_table_id
    }
    /// <p>The current installation status of the route in the route table.</p>
    pub fn route_installation_status(mut self, input: crate::types::RouteServerRouteInstallationStatus) -> Self {
        self.route_installation_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current installation status of the route in the route table.</p>
    pub fn set_route_installation_status(mut self, input: ::std::option::Option<crate::types::RouteServerRouteInstallationStatus>) -> Self {
        self.route_installation_status = input;
        self
    }
    /// <p>The current installation status of the route in the route table.</p>
    pub fn get_route_installation_status(&self) -> &::std::option::Option<crate::types::RouteServerRouteInstallationStatus> {
        &self.route_installation_status
    }
    /// <p>The reason for the current installation status of the route.</p>
    pub fn route_installation_status_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.route_installation_status_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason for the current installation status of the route.</p>
    pub fn set_route_installation_status_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.route_installation_status_reason = input;
        self
    }
    /// <p>The reason for the current installation status of the route.</p>
    pub fn get_route_installation_status_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.route_installation_status_reason
    }
    /// Consumes the builder and constructs a [`RouteServerRouteInstallationDetail`](crate::types::RouteServerRouteInstallationDetail).
    pub fn build(self) -> crate::types::RouteServerRouteInstallationDetail {
        crate::types::RouteServerRouteInstallationDetail {
            route_table_id: self.route_table_id,
            route_installation_status: self.route_installation_status,
            route_installation_status_reason: self.route_installation_status_reason,
        }
    }
}
