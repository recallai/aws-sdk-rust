// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>With network performance options, you can adjust your bandwidth preferences to meet the needs of the workload that runs on your instance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceNetworkPerformanceOptions {
    /// <p>When you configure network bandwidth weighting, you can boost your baseline bandwidth for either networking or EBS by up to 25%. The total available baseline bandwidth for your instance remains the same. The default option uses the standard bandwidth configuration for your instance type.</p>
    pub bandwidth_weighting: ::std::option::Option<crate::types::InstanceBandwidthWeighting>,
}
impl InstanceNetworkPerformanceOptions {
    /// <p>When you configure network bandwidth weighting, you can boost your baseline bandwidth for either networking or EBS by up to 25%. The total available baseline bandwidth for your instance remains the same. The default option uses the standard bandwidth configuration for your instance type.</p>
    pub fn bandwidth_weighting(&self) -> ::std::option::Option<&crate::types::InstanceBandwidthWeighting> {
        self.bandwidth_weighting.as_ref()
    }
}
impl InstanceNetworkPerformanceOptions {
    /// Creates a new builder-style object to manufacture [`InstanceNetworkPerformanceOptions`](crate::types::InstanceNetworkPerformanceOptions).
    pub fn builder() -> crate::types::builders::InstanceNetworkPerformanceOptionsBuilder {
        crate::types::builders::InstanceNetworkPerformanceOptionsBuilder::default()
    }
}

/// A builder for [`InstanceNetworkPerformanceOptions`](crate::types::InstanceNetworkPerformanceOptions).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InstanceNetworkPerformanceOptionsBuilder {
    pub(crate) bandwidth_weighting: ::std::option::Option<crate::types::InstanceBandwidthWeighting>,
}
impl InstanceNetworkPerformanceOptionsBuilder {
    /// <p>When you configure network bandwidth weighting, you can boost your baseline bandwidth for either networking or EBS by up to 25%. The total available baseline bandwidth for your instance remains the same. The default option uses the standard bandwidth configuration for your instance type.</p>
    pub fn bandwidth_weighting(mut self, input: crate::types::InstanceBandwidthWeighting) -> Self {
        self.bandwidth_weighting = ::std::option::Option::Some(input);
        self
    }
    /// <p>When you configure network bandwidth weighting, you can boost your baseline bandwidth for either networking or EBS by up to 25%. The total available baseline bandwidth for your instance remains the same. The default option uses the standard bandwidth configuration for your instance type.</p>
    pub fn set_bandwidth_weighting(mut self, input: ::std::option::Option<crate::types::InstanceBandwidthWeighting>) -> Self {
        self.bandwidth_weighting = input;
        self
    }
    /// <p>When you configure network bandwidth weighting, you can boost your baseline bandwidth for either networking or EBS by up to 25%. The total available baseline bandwidth for your instance remains the same. The default option uses the standard bandwidth configuration for your instance type.</p>
    pub fn get_bandwidth_weighting(&self) -> &::std::option::Option<crate::types::InstanceBandwidthWeighting> {
        &self.bandwidth_weighting
    }
    /// Consumes the builder and constructs a [`InstanceNetworkPerformanceOptions`](crate::types::InstanceNetworkPerformanceOptions).
    pub fn build(self) -> crate::types::InstanceNetworkPerformanceOptions {
        crate::types::InstanceNetworkPerformanceOptions {
            bandwidth_weighting: self.bandwidth_weighting,
        }
    }
}
