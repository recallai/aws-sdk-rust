// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <note>
/// <p>Amazon Elastic Graphics reached end of life on January 8, 2024.</p>
/// </note>
/// <p>A specification for an Elastic Graphics accelerator.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ElasticGpuSpecification {
    /// <p>The type of Elastic Graphics accelerator.</p>
    pub r#type: ::std::option::Option<::std::string::String>,
}
impl ElasticGpuSpecification {
    /// <p>The type of Elastic Graphics accelerator.</p>
    pub fn r#type(&self) -> ::std::option::Option<&str> {
        self.r#type.as_deref()
    }
}
impl ElasticGpuSpecification {
    /// Creates a new builder-style object to manufacture [`ElasticGpuSpecification`](crate::types::ElasticGpuSpecification).
    pub fn builder() -> crate::types::builders::ElasticGpuSpecificationBuilder {
        crate::types::builders::ElasticGpuSpecificationBuilder::default()
    }
}

/// A builder for [`ElasticGpuSpecification`](crate::types::ElasticGpuSpecification).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ElasticGpuSpecificationBuilder {
    pub(crate) r#type: ::std::option::Option<::std::string::String>,
}
impl ElasticGpuSpecificationBuilder {
    /// <p>The type of Elastic Graphics accelerator.</p>
    /// This field is required.
    pub fn r#type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.r#type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of Elastic Graphics accelerator.</p>
    pub fn set_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of Elastic Graphics accelerator.</p>
    pub fn get_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.r#type
    }
    /// Consumes the builder and constructs a [`ElasticGpuSpecification`](crate::types::ElasticGpuSpecification).
    pub fn build(self) -> crate::types::ElasticGpuSpecification {
        crate::types::ElasticGpuSpecification { r#type: self.r#type }
    }
}
