// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The DNS names of the endpoint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceConnectEndpointDnsNames {
    /// <p>The DNS name of the EC2 Instance Connect Endpoint.</p>
    pub dns_name: ::std::option::Option<::std::string::String>,
    /// <p>The Federal Information Processing Standards (FIPS) compliant DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fips_dns_name: ::std::option::Option<::std::string::String>,
}
impl InstanceConnectEndpointDnsNames {
    /// <p>The DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn dns_name(&self) -> ::std::option::Option<&str> {
        self.dns_name.as_deref()
    }
    /// <p>The Federal Information Processing Standards (FIPS) compliant DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn fips_dns_name(&self) -> ::std::option::Option<&str> {
        self.fips_dns_name.as_deref()
    }
}
impl InstanceConnectEndpointDnsNames {
    /// Creates a new builder-style object to manufacture [`InstanceConnectEndpointDnsNames`](crate::types::InstanceConnectEndpointDnsNames).
    pub fn builder() -> crate::types::builders::InstanceConnectEndpointDnsNamesBuilder {
        crate::types::builders::InstanceConnectEndpointDnsNamesBuilder::default()
    }
}

/// A builder for [`InstanceConnectEndpointDnsNames`](crate::types::InstanceConnectEndpointDnsNames).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InstanceConnectEndpointDnsNamesBuilder {
    pub(crate) dns_name: ::std::option::Option<::std::string::String>,
    pub(crate) fips_dns_name: ::std::option::Option<::std::string::String>,
}
impl InstanceConnectEndpointDnsNamesBuilder {
    /// <p>The DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn dns_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.dns_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn set_dns_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.dns_name = input;
        self
    }
    /// <p>The DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn get_dns_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.dns_name
    }
    /// <p>The Federal Information Processing Standards (FIPS) compliant DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn fips_dns_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.fips_dns_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Federal Information Processing Standards (FIPS) compliant DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn set_fips_dns_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.fips_dns_name = input;
        self
    }
    /// <p>The Federal Information Processing Standards (FIPS) compliant DNS name of the EC2 Instance Connect Endpoint.</p>
    pub fn get_fips_dns_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.fips_dns_name
    }
    /// Consumes the builder and constructs a [`InstanceConnectEndpointDnsNames`](crate::types::InstanceConnectEndpointDnsNames).
    pub fn build(self) -> crate::types::InstanceConnectEndpointDnsNames {
        crate::types::InstanceConnectEndpointDnsNames {
            dns_name: self.dns_name,
            fips_dns_name: self.fips_dns_name,
        }
    }
}
