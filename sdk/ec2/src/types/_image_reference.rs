// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A resource that is referencing an image.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImageReference {
    /// <p>The ID of the referenced image.</p>
    pub image_id: ::std::option::Option<::std::string::String>,
    /// <p>The type of resource referencing the image.</p>
    pub resource_type: ::std::option::Option<crate::types::ImageReferenceResourceType>,
    /// <p>The Amazon Resource Name (ARN) of the resource referencing the image.</p>
    pub arn: ::std::option::Option<::std::string::String>,
}
impl ImageReference {
    /// <p>The ID of the referenced image.</p>
    pub fn image_id(&self) -> ::std::option::Option<&str> {
        self.image_id.as_deref()
    }
    /// <p>The type of resource referencing the image.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&crate::types::ImageReferenceResourceType> {
        self.resource_type.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the resource referencing the image.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
}
impl ImageReference {
    /// Creates a new builder-style object to manufacture [`ImageReference`](crate::types::ImageReference).
    pub fn builder() -> crate::types::builders::ImageReferenceBuilder {
        crate::types::builders::ImageReferenceBuilder::default()
    }
}

/// A builder for [`ImageReference`](crate::types::ImageReference).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImageReferenceBuilder {
    pub(crate) image_id: ::std::option::Option<::std::string::String>,
    pub(crate) resource_type: ::std::option::Option<crate::types::ImageReferenceResourceType>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
}
impl ImageReferenceBuilder {
    /// <p>The ID of the referenced image.</p>
    pub fn image_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.image_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the referenced image.</p>
    pub fn set_image_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.image_id = input;
        self
    }
    /// <p>The ID of the referenced image.</p>
    pub fn get_image_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.image_id
    }
    /// <p>The type of resource referencing the image.</p>
    pub fn resource_type(mut self, input: crate::types::ImageReferenceResourceType) -> Self {
        self.resource_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of resource referencing the image.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<crate::types::ImageReferenceResourceType>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The type of resource referencing the image.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<crate::types::ImageReferenceResourceType> {
        &self.resource_type
    }
    /// <p>The Amazon Resource Name (ARN) of the resource referencing the image.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource referencing the image.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource referencing the image.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// Consumes the builder and constructs a [`ImageReference`](crate::types::ImageReference).
    pub fn build(self) -> crate::types::ImageReference {
        crate::types::ImageReference {
            image_id: self.image_id,
            resource_type: self.resource_type,
            arn: self.arn,
        }
    }
}
