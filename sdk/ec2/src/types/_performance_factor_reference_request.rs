// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specify an instance family to use as the baseline reference for CPU performance. All instance types that match your specified attributes will be compared against the CPU performance of the referenced instance family, regardless of CPU manufacturer or architecture.</p><note>
/// <p>Currently, only one instance family can be specified in the list.</p>
/// </note>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PerformanceFactorReferenceRequest {
    /// <p>The instance family to use as a baseline reference.</p><note>
    /// <p>Ensure that you specify the correct value for the instance family. The instance family is everything before the period (<code>.</code>) in the instance type name. For example, in the instance type <code>c6i.large</code>, the instance family is <code>c6i</code>, not <code>c6</code>. For more information, see <a href="https://docs.aws.amazon.com/ec2/latest/instancetypes/instance-type-names.html">Amazon EC2 instance type naming conventions</a> in <i>Amazon EC2 Instance Types</i>.</p>
    /// </note>
    /// <p>The following instance families are <i>not supported</i> for performance protection:</p>
    /// <ul>
    /// <li>
    /// <p><code>c1</code></p></li>
    /// <li>
    /// <p><code>g3</code> | <code>g3s</code></p></li>
    /// <li>
    /// <p><code>hpc7g</code></p></li>
    /// <li>
    /// <p><code>m1</code> | <code>m2</code></p></li>
    /// <li>
    /// <p><code>mac1</code> | <code>mac2</code> | <code>mac2-m1ultra</code> | <code>mac2-m2</code> | <code>mac2-m2pro</code></p></li>
    /// <li>
    /// <p><code>p3dn</code> | <code>p4d</code> | <code>p5</code></p></li>
    /// <li>
    /// <p><code>t1</code></p></li>
    /// <li>
    /// <p><code>u-12tb1</code> | <code>u-18tb1</code> | <code>u-24tb1</code> | <code>u-3tb1</code> | <code>u-6tb1</code> | <code>u-9tb1</code> | <code>u7i-12tb</code> | <code>u7in-16tb</code> | <code>u7in-24tb</code> | <code>u7in-32tb</code></p></li>
    /// </ul>
    /// <p>If you enable performance protection by specifying a supported instance family, the returned instance types will exclude the above unsupported instance families.</p>
    /// <p>If you specify an unsupported instance family as a value for baseline performance, the API returns an empty response for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements">GetInstanceTypesFromInstanceRequirements</a> and an exception for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet">RequestSpotFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet">ModifyFleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest">ModifySpotFleetRequest</a>.</p>
    pub instance_family: ::std::option::Option<::std::string::String>,
}
impl PerformanceFactorReferenceRequest {
    /// <p>The instance family to use as a baseline reference.</p><note>
    /// <p>Ensure that you specify the correct value for the instance family. The instance family is everything before the period (<code>.</code>) in the instance type name. For example, in the instance type <code>c6i.large</code>, the instance family is <code>c6i</code>, not <code>c6</code>. For more information, see <a href="https://docs.aws.amazon.com/ec2/latest/instancetypes/instance-type-names.html">Amazon EC2 instance type naming conventions</a> in <i>Amazon EC2 Instance Types</i>.</p>
    /// </note>
    /// <p>The following instance families are <i>not supported</i> for performance protection:</p>
    /// <ul>
    /// <li>
    /// <p><code>c1</code></p></li>
    /// <li>
    /// <p><code>g3</code> | <code>g3s</code></p></li>
    /// <li>
    /// <p><code>hpc7g</code></p></li>
    /// <li>
    /// <p><code>m1</code> | <code>m2</code></p></li>
    /// <li>
    /// <p><code>mac1</code> | <code>mac2</code> | <code>mac2-m1ultra</code> | <code>mac2-m2</code> | <code>mac2-m2pro</code></p></li>
    /// <li>
    /// <p><code>p3dn</code> | <code>p4d</code> | <code>p5</code></p></li>
    /// <li>
    /// <p><code>t1</code></p></li>
    /// <li>
    /// <p><code>u-12tb1</code> | <code>u-18tb1</code> | <code>u-24tb1</code> | <code>u-3tb1</code> | <code>u-6tb1</code> | <code>u-9tb1</code> | <code>u7i-12tb</code> | <code>u7in-16tb</code> | <code>u7in-24tb</code> | <code>u7in-32tb</code></p></li>
    /// </ul>
    /// <p>If you enable performance protection by specifying a supported instance family, the returned instance types will exclude the above unsupported instance families.</p>
    /// <p>If you specify an unsupported instance family as a value for baseline performance, the API returns an empty response for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements">GetInstanceTypesFromInstanceRequirements</a> and an exception for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet">RequestSpotFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet">ModifyFleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest">ModifySpotFleetRequest</a>.</p>
    pub fn instance_family(&self) -> ::std::option::Option<&str> {
        self.instance_family.as_deref()
    }
}
impl PerformanceFactorReferenceRequest {
    /// Creates a new builder-style object to manufacture [`PerformanceFactorReferenceRequest`](crate::types::PerformanceFactorReferenceRequest).
    pub fn builder() -> crate::types::builders::PerformanceFactorReferenceRequestBuilder {
        crate::types::builders::PerformanceFactorReferenceRequestBuilder::default()
    }
}

/// A builder for [`PerformanceFactorReferenceRequest`](crate::types::PerformanceFactorReferenceRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PerformanceFactorReferenceRequestBuilder {
    pub(crate) instance_family: ::std::option::Option<::std::string::String>,
}
impl PerformanceFactorReferenceRequestBuilder {
    /// <p>The instance family to use as a baseline reference.</p><note>
    /// <p>Ensure that you specify the correct value for the instance family. The instance family is everything before the period (<code>.</code>) in the instance type name. For example, in the instance type <code>c6i.large</code>, the instance family is <code>c6i</code>, not <code>c6</code>. For more information, see <a href="https://docs.aws.amazon.com/ec2/latest/instancetypes/instance-type-names.html">Amazon EC2 instance type naming conventions</a> in <i>Amazon EC2 Instance Types</i>.</p>
    /// </note>
    /// <p>The following instance families are <i>not supported</i> for performance protection:</p>
    /// <ul>
    /// <li>
    /// <p><code>c1</code></p></li>
    /// <li>
    /// <p><code>g3</code> | <code>g3s</code></p></li>
    /// <li>
    /// <p><code>hpc7g</code></p></li>
    /// <li>
    /// <p><code>m1</code> | <code>m2</code></p></li>
    /// <li>
    /// <p><code>mac1</code> | <code>mac2</code> | <code>mac2-m1ultra</code> | <code>mac2-m2</code> | <code>mac2-m2pro</code></p></li>
    /// <li>
    /// <p><code>p3dn</code> | <code>p4d</code> | <code>p5</code></p></li>
    /// <li>
    /// <p><code>t1</code></p></li>
    /// <li>
    /// <p><code>u-12tb1</code> | <code>u-18tb1</code> | <code>u-24tb1</code> | <code>u-3tb1</code> | <code>u-6tb1</code> | <code>u-9tb1</code> | <code>u7i-12tb</code> | <code>u7in-16tb</code> | <code>u7in-24tb</code> | <code>u7in-32tb</code></p></li>
    /// </ul>
    /// <p>If you enable performance protection by specifying a supported instance family, the returned instance types will exclude the above unsupported instance families.</p>
    /// <p>If you specify an unsupported instance family as a value for baseline performance, the API returns an empty response for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements">GetInstanceTypesFromInstanceRequirements</a> and an exception for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet">RequestSpotFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet">ModifyFleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest">ModifySpotFleetRequest</a>.</p>
    pub fn instance_family(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_family = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The instance family to use as a baseline reference.</p><note>
    /// <p>Ensure that you specify the correct value for the instance family. The instance family is everything before the period (<code>.</code>) in the instance type name. For example, in the instance type <code>c6i.large</code>, the instance family is <code>c6i</code>, not <code>c6</code>. For more information, see <a href="https://docs.aws.amazon.com/ec2/latest/instancetypes/instance-type-names.html">Amazon EC2 instance type naming conventions</a> in <i>Amazon EC2 Instance Types</i>.</p>
    /// </note>
    /// <p>The following instance families are <i>not supported</i> for performance protection:</p>
    /// <ul>
    /// <li>
    /// <p><code>c1</code></p></li>
    /// <li>
    /// <p><code>g3</code> | <code>g3s</code></p></li>
    /// <li>
    /// <p><code>hpc7g</code></p></li>
    /// <li>
    /// <p><code>m1</code> | <code>m2</code></p></li>
    /// <li>
    /// <p><code>mac1</code> | <code>mac2</code> | <code>mac2-m1ultra</code> | <code>mac2-m2</code> | <code>mac2-m2pro</code></p></li>
    /// <li>
    /// <p><code>p3dn</code> | <code>p4d</code> | <code>p5</code></p></li>
    /// <li>
    /// <p><code>t1</code></p></li>
    /// <li>
    /// <p><code>u-12tb1</code> | <code>u-18tb1</code> | <code>u-24tb1</code> | <code>u-3tb1</code> | <code>u-6tb1</code> | <code>u-9tb1</code> | <code>u7i-12tb</code> | <code>u7in-16tb</code> | <code>u7in-24tb</code> | <code>u7in-32tb</code></p></li>
    /// </ul>
    /// <p>If you enable performance protection by specifying a supported instance family, the returned instance types will exclude the above unsupported instance families.</p>
    /// <p>If you specify an unsupported instance family as a value for baseline performance, the API returns an empty response for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements">GetInstanceTypesFromInstanceRequirements</a> and an exception for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet">RequestSpotFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet">ModifyFleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest">ModifySpotFleetRequest</a>.</p>
    pub fn set_instance_family(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_family = input;
        self
    }
    /// <p>The instance family to use as a baseline reference.</p><note>
    /// <p>Ensure that you specify the correct value for the instance family. The instance family is everything before the period (<code>.</code>) in the instance type name. For example, in the instance type <code>c6i.large</code>, the instance family is <code>c6i</code>, not <code>c6</code>. For more information, see <a href="https://docs.aws.amazon.com/ec2/latest/instancetypes/instance-type-names.html">Amazon EC2 instance type naming conventions</a> in <i>Amazon EC2 Instance Types</i>.</p>
    /// </note>
    /// <p>The following instance families are <i>not supported</i> for performance protection:</p>
    /// <ul>
    /// <li>
    /// <p><code>c1</code></p></li>
    /// <li>
    /// <p><code>g3</code> | <code>g3s</code></p></li>
    /// <li>
    /// <p><code>hpc7g</code></p></li>
    /// <li>
    /// <p><code>m1</code> | <code>m2</code></p></li>
    /// <li>
    /// <p><code>mac1</code> | <code>mac2</code> | <code>mac2-m1ultra</code> | <code>mac2-m2</code> | <code>mac2-m2pro</code></p></li>
    /// <li>
    /// <p><code>p3dn</code> | <code>p4d</code> | <code>p5</code></p></li>
    /// <li>
    /// <p><code>t1</code></p></li>
    /// <li>
    /// <p><code>u-12tb1</code> | <code>u-18tb1</code> | <code>u-24tb1</code> | <code>u-3tb1</code> | <code>u-6tb1</code> | <code>u-9tb1</code> | <code>u7i-12tb</code> | <code>u7in-16tb</code> | <code>u7in-24tb</code> | <code>u7in-32tb</code></p></li>
    /// </ul>
    /// <p>If you enable performance protection by specifying a supported instance family, the returned instance types will exclude the above unsupported instance families.</p>
    /// <p>If you specify an unsupported instance family as a value for baseline performance, the API returns an empty response for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements">GetInstanceTypesFromInstanceRequirements</a> and an exception for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet">RequestSpotFleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet">ModifyFleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest">ModifySpotFleetRequest</a>.</p>
    pub fn get_instance_family(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_family
    }
    /// Consumes the builder and constructs a [`PerformanceFactorReferenceRequest`](crate::types::PerformanceFactorReferenceRequest).
    pub fn build(self) -> crate::types::PerformanceFactorReferenceRequest {
        crate::types::PerformanceFactorReferenceRequest {
            instance_family: self.instance_family,
        }
    }
}
